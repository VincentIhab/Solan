{"version":3,"sources":["js/dom.js"],"names":["document","addEventListener","spinnerContainer","getElementById","videoContainer","imageContainer","backgroundVideo","navbar","videoLoaded","initialScrollHandled","videoObserver","IntersectionObserver","entries","forEach","entry","isIntersecting","src","unobserve","target","threshold","observe","handleScroll","window","scrollY","classList","add","remove","onloadeddata","style","display","onerror","setTimeout","isScrolling","timeline","gsap","to","duration","x","opacity","ease","clearTimeout","observer","querySelectorAll","e"],"mappings":";AAAAA,SAASC,iBAAiB,mBAAoB,WAC1C,IAAMC,EAAmBF,SAASG,eAAe,qBAC3CC,EAAiBJ,SAASG,eAAe,mBACzCE,EAAiBL,SAASG,eAAe,mBACzCG,EAAkBN,SAASG,eAAe,oBAC1CI,EAASP,SAASG,eAAe,UAGnCK,GAAc,EACdC,GAAuB,EAGrBC,EAAgB,IAAIC,qBAAqB,SAACC,GAC5CA,EAAQC,QAAQ,SAAAC,GACRA,EAAMC,iBACNT,EAAgBU,IAAM,qBACtBN,EAAcO,UAAUH,EAAMI,YAGvC,CAAEC,UAAW,KAEhBT,EAAcU,QAAQd,GAEtB,IAAMe,EAAe,WACbC,OAAOC,QAlBS,IAmBhBhB,EAAOiB,UAAUC,IAAI,YAErBlB,EAAOiB,UAAUE,OAAO,aAIhCpB,EAAgBqB,aAAe,WAC7BnB,GAAc,EACdN,EAAiBsB,UAAUC,IAAI,UAC/BrB,EAAewB,MAAMC,QAAU,QAC/BxB,EAAeuB,MAAMC,QAAU,OAC/BpB,GAAuB,EACvBY,KAGJf,EAAgBwB,QAAU,WACtB5B,EAAiBsB,UAAUC,IAAI,UAC/BrB,EAAewB,MAAMC,QAAU,OAC/BxB,EAAeuB,MAAMC,QAAU,QAC/BpB,GAAuB,EACvBY,KAGJU,WAAW,WACFvB,IACDN,EAAiBsB,UAAUC,IAAI,UAC/BrB,EAAewB,MAAMC,QAAU,OAC/BxB,EAAeuB,MAAMC,QAAU,QAC/BpB,GAAuB,EACvBY,MAEL,KAED,IAqCIW,EArCEC,EAAWC,KAAKD,WACtBA,EAASE,GAAG,UAAW,CACnBC,SAAU,IACVC,EAAG,EACHC,QAAS,EACTC,KAAM,cACP,SAEHN,EAASE,GAAG,iBAAkB,CAC1BC,SAAU,EACVC,EAAG,EACHC,QAAS,EACTC,KAAM,cACP,SAEHN,EAASE,GAAG,iBAAkB,CAC1BC,SAAU,IACVC,EAAG,EACHC,QAAS,EACTC,KAAM,cACP,SAEHN,EAASE,GAAG,mBAAoB,CAC5BC,SAAU,IACVC,EAAG,EACHC,QAAS,EACTC,KAAM,cACP,SAEHN,EAASE,GAAG,qBAAsB,CAC9BC,SAAU,IACVC,EAAG,EACHC,QAAS,EACTC,KAAM,cACP,SAIHjB,OAAOrB,iBAAiB,SAAU,WAC9BqB,OAAOkB,aAAaR,GACpBA,EAAcD,WAAW,WACjBtB,GACAY,KAEL,OAaP,IAAMoB,EAAW,IAAI9B,qBATrB,SAAwBC,EAAS6B,GAC7B7B,EAAQC,QAAQ,SAACC,GACTA,EAAMC,iBACND,EAAMI,OAAOM,UAAUC,IAAI,WAC3BgB,EAASxB,UAAUH,EAAMI,YAKqB,CACtDC,UAAW,KAGfnB,SAAS0C,iBAAiB,WAAW7B,QAAQ,SAAC8B,GAC1CF,EAASrB,QAAQuB","file":"dom.92cebd6f.js","sourceRoot":"..\\src","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\r\n    const spinnerContainer = document.getElementById('spinner-container');\r\n    const videoContainer = document.getElementById('video-container');\r\n    const imageContainer = document.getElementById('image-container');\r\n    const backgroundVideo = document.getElementById('background-video');\r\n    const navbar = document.getElementById(\"navbar\");\r\n    const scrollThreshold = 100; // The scroll level to trigger the background change\r\n\r\n    let videoLoaded = false;\r\n    let initialScrollHandled = false;\r\n\r\n    // Lazy load video\r\n    const videoObserver = new IntersectionObserver((entries) => {\r\n        entries.forEach(entry => {\r\n            if (entry.isIntersecting) {\r\n                backgroundVideo.src = \"./Images/video.mp4\";\r\n                videoObserver.unobserve(entry.target);\r\n            }\r\n        });\r\n    }, { threshold: 0.1 });\r\n\r\n    videoObserver.observe(backgroundVideo);\r\n\r\n    const handleScroll = () => {\r\n        if (window.scrollY > scrollThreshold) {\r\n            navbar.classList.add(\"scrolled\");\r\n        } else {\r\n            navbar.classList.remove(\"scrolled\");\r\n        }\r\n    };\r\n\r\n    backgroundVideo.onloadeddata = () => {\r\n      videoLoaded = true;\r\n      spinnerContainer.classList.add('hidden');\r\n      videoContainer.style.display = 'block';\r\n      imageContainer.style.display = 'none';\r\n      initialScrollHandled = true;\r\n      handleScroll();\r\n  };\r\n\r\n  backgroundVideo.onerror = () => {\r\n      spinnerContainer.classList.add('hidden');\r\n      videoContainer.style.display = 'none';\r\n      imageContainer.style.display = 'block';\r\n      initialScrollHandled = true;\r\n      handleScroll();\r\n  };\r\n\r\n  setTimeout(() => {\r\n      if (!videoLoaded) {\r\n          spinnerContainer.classList.add('hidden');\r\n          videoContainer.style.display = 'none';\r\n          imageContainer.style.display = 'block';\r\n          initialScrollHandled = true;\r\n          handleScroll();\r\n      }\r\n  }, 10000); // 10 seconds timeout\r\n\r\n    const timeline = gsap.timeline();\r\n    timeline.to(\".header\", {\r\n        duration: 2.5,\r\n        x: 0,\r\n        opacity: 1,\r\n        ease: \"power2.out\",\r\n    }, \"-=0.4\");\r\n\r\n    timeline.to(\".header__spans\", {\r\n        duration: 1,\r\n        x: 0,\r\n        opacity: 1,\r\n        ease: \"power2.out\",\r\n    }, \"-=0.4\");\r\n\r\n    timeline.to(\".header__title\", {\r\n        duration: 1.1,\r\n        x: 0,\r\n        opacity: 1,\r\n        ease: \"power2.out\",\r\n    }, \"-=0.4\");\r\n\r\n    timeline.to(\".header__buttons\", {\r\n        duration: 1.1,\r\n        x: 0,\r\n        opacity: 1,\r\n        ease: \"power2.out\",\r\n    }, \"-=0.4\");\r\n\r\n    timeline.to(\".header__paragraph\", {\r\n        duration: 1.2,\r\n        x: 0,\r\n        opacity: 1,\r\n        ease: \"power2.out\",\r\n    }, \"-=0.4\");\r\n\r\n    // Throttle the scroll event listener\r\n    let isScrolling;\r\n    window.addEventListener(\"scroll\", () => {\r\n        window.clearTimeout(isScrolling);\r\n        isScrolling = setTimeout(() => {\r\n            if (initialScrollHandled) {\r\n                handleScroll();\r\n            }\r\n        }, 100);\r\n    });\r\n\r\n    // Create an IntersectionObserver for animations\r\n    function animateElement(entries, observer) {\r\n        entries.forEach((entry) => {\r\n            if (entry.isIntersecting) {\r\n                entry.target.classList.add(\"animate\");\r\n                observer.unobserve(entry.target); // Stop observing after adding the class\r\n            }\r\n        });\r\n    }\r\n\r\n    const observer = new IntersectionObserver(animateElement, {\r\n        threshold: 0.1, // Adjust as needed\r\n    });\r\n\r\n    document.querySelectorAll(\".target\").forEach((e) => {\r\n        observer.observe(e);\r\n    });\r\n});\r\n"]}