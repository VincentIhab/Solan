{"version":3,"sources":["js/dom.js"],"names":["mobileVideoSrc","require","desktopVideoSrc","document","addEventListener","spinnerContainer","getElementById","videoContainer","imageContainer","backgroundVideo","navigationButton","querySelector","navbar","newParent","videoLoaded","currentVideo","mobileVideo","createElement","src","preload","onloadeddata","onerror","e","console","error","desktopVideo","isScrolling","handleScroll","window","scrollY","classList","add","remove","scrolling","videoLoadSuccess","style","display","videoLoadError","selectVideo","videoElement","innerWidth","insertBefore","firstChild","setTimeout","warn","clearTimeout","requestAnimationFrame","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","unobserve","threshold","querySelectorAll","observe","checkbox","overlay","checked","body","appendChild","contains","once","timeline","gsap","to","duration","x","opacity","ease"],"mappings":"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","file":"dom.8389de3d.js","sourceRoot":"..\\src","sourcesContent":["const mobileVideoSrc = require('../videos/mobile-Land-video.webm');\r\nconst desktopVideoSrc = require('../videos/video.mp4');\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    const spinnerContainer = document.getElementById('spinner-container');\r\n    const videoContainer = document.getElementById('video-container');\r\n    const imageContainer = document.getElementById('image-container');\r\n    const backgroundVideo = document.getElementById('background-video');\r\n    const navigationButton = document.querySelector('.navigation__button');\r\n    const navbar = document.getElementById(\"navbar\");\r\n    const newParent = document.getElementById('header_contianer');\r\n    const scrollThreshold = 100; // The scroll level to trigger the background change\r\n\r\n    let videoLoaded = false;\r\n    let mobileVideoLoaded = false;\r\n    let desktopVideoLoaded = false;\r\n    let currentVideo = '';\r\n\r\n    // Load the videos in memory\r\n    const mobileVideo = document.createElement('video');\r\n    mobileVideo.src = './videos/mobile-Land-video.webm';\r\n    mobileVideo.preload = 'auto';\r\n    mobileVideo.onloadeddata = () => {\r\n        \r\n        mobileVideoLoaded = true;\r\n    };\r\n    mobileVideo.onerror = (e) => {\r\n        console.error('Failed to preload mobile video', e);\r\n    };\r\n\r\n    const desktopVideo = document.createElement('video');\r\n    desktopVideo.src = './videos/video.mp4';\r\n    desktopVideo.preload = 'auto';\r\n    desktopVideo.onloadeddata = () => {\r\n        \r\n        desktopVideoLoaded = true;\r\n    };\r\n    desktopVideo.onerror = (e) => {\r\n        console.error('Failed to preload desktop video', e);\r\n    };\r\n\r\n    // Handle scroll changes for the navbar\r\n    const handleScroll = () => {\r\n        if (window.scrollY > scrollThreshold) {\r\n            navbar.classList.add(\"scrolled\");\r\n            navigationButton.classList.add('btn-darkin');\r\n        } else {\r\n            navbar.classList.remove(\"scrolled\");\r\n            navigationButton.classList.remove('btn-darkin');\r\n        }\r\n    };\r\n\r\n    const handleScrollOptimized = () => {\r\n        if (!scrolling) {\r\n            scrolling = true;\r\n            window.requestAnimationFrame(() => {\r\n                handleScroll();\r\n                scrolling = false;\r\n            });\r\n        }\r\n    };\r\n\r\n    let scrolling = false;\r\n\r\n    // Video load success function\r\n    const videoLoadSuccess = () => {\r\n        \r\n        videoLoaded = true;\r\n        spinnerContainer.classList.add('hidden');\r\n        videoContainer.style.display = 'block';\r\n        imageContainer.style.display = 'none';\r\n        handleScroll();\r\n    };\r\n\r\n    // Video load error function\r\n    const videoLoadError = (e) => {\r\n        console.error('Video failed to load', e);\r\n        spinnerContainer.classList.add('hidden');\r\n        videoContainer.style.display = 'none';\r\n        imageContainer.style.display = 'block';\r\n        handleScroll();\r\n    };\r\n\r\n    // Select and load the appropriate video based on screen size\r\n    const selectVideo = () => {\r\n        const videoElement = backgroundVideo;\r\n        if (window.innerWidth <= 768 && currentVideo !== 'mobile') {\r\n            videoElement.src = mobileVideo.src;\r\n            videoContainer.classList.remove('bg-video--desktop')\r\n            videoElement.classList.remove('bg-video--desktop__content_desk')\r\n\r\n            videoContainer.classList.add('bg-video--mobile')\r\n            videoElement.classList.add('bg-video--mobile__content_mobile')\r\n\r\n            currentVideo = 'mobile';\r\n        } else if (window.innerWidth > 768 && currentVideo !== 'desktop') {\r\n            videoElement.src = desktopVideo.src;\r\n            videoContainer.classList.remove('bg-video--mobile')\r\n            videoElement.classList.remove('bg-video--mobile__content_mobile')\r\n            \r\n            videoContainer.classList.add('bg-video--desktop')\r\n            videoElement.classList.add('bg-video--desktop__content_desk')\r\n            newParent.insertBefore(videoContainer, newParent.firstChild);\r\n\r\n            currentVideo = 'desktop';\r\n        }\r\n\r\n        videoElement.onloadeddata = videoLoadSuccess;\r\n        videoElement.onerror = videoLoadError;\r\n    };\r\n\r\n    // Timeout to handle video load failure\r\n    setTimeout(() => {\r\n        if (!videoLoaded) {\r\n            console.warn('Video load timeout reached');\r\n            spinnerContainer.classList.add('hidden');\r\n            videoContainer.style.display = 'none';\r\n            imageContainer.style.display = 'block';\r\n            handleScroll();\r\n        }\r\n    }, 12000); // 12 seconds timeout\r\n\r\n    selectVideo();\r\n\r\n    // Listen for window resize events to change the video\r\n    window.addEventListener('resize', selectVideo);\r\n\r\n    // Throttle the scroll event listener\r\n    let isScrolling;\r\n    window.addEventListener(\"scroll\", () => {\r\n        window.clearTimeout(isScrolling);\r\n        isScrolling = setTimeout(() => {\r\n            handleScrollOptimized();\r\n        }, 100);\r\n    });\r\n\r\n    // Create an IntersectionObserver for animations to avoid some errors \r\n    function animateElement(entries, observer) {\r\n        entries.forEach((entry) => {\r\n            if (entry.isIntersecting) {\r\n                entry.target.classList.add(\"animate\");\r\n                observer.unobserve(entry.target); // Stop observing after adding the class\r\n            }\r\n        });\r\n    }\r\n\r\n    const observer = new IntersectionObserver(animateElement, {\r\n        threshold: 0.1, // Adjust as needed\r\n    });\r\n\r\n    document.querySelectorAll(\".target\").forEach((e) => {\r\n        observer.observe(e);\r\n    });\r\n\r\n    // Overlay for phone nav\r\n    const checkbox = document.getElementById('navi-toggle');\r\n    const overlay = document.createElement('div');\r\n    overlay.classList.add('overlay');\r\n\r\n    checkbox.addEventListener('change', () => {\r\n        if (checkbox.checked) {\r\n            document.body.appendChild(overlay);\r\n            setTimeout(() => overlay.classList.add('show'), 10);\r\n        } else {\r\n            overlay.classList.remove('show');\r\n            overlay.addEventListener('transitionend', () => {\r\n                if (!overlay.classList.contains('show')) {\r\n                    overlay.remove();\r\n                }\r\n            }, { once: true });\r\n        }\r\n    });\r\n\r\n    overlay.addEventListener('click', () => {\r\n        checkbox.checked = false;\r\n        overlay.classList.remove('show');\r\n        overlay.addEventListener('transitionend', () => {\r\n            if (!overlay.classList.contains('show')) {\r\n                overlay.remove();\r\n            }\r\n        }, { once: true });\r\n    });\r\n\r\n    // Intro animation\r\n    const timeline = gsap.timeline();\r\n    timeline.to(\".header\", {\r\n        duration: 2.5,\r\n        x: 0,\r\n        opacity: 1,\r\n        ease: \"power2.out\",\r\n    }, \"-=0.4\");\r\n\r\n    timeline.to(\".header__spans\", {\r\n        duration: 1,\r\n        x: 0,\r\n        opacity: 1,\r\n        ease: \"power2.out\",\r\n    }, \"-=0.4\");\r\n\r\n    timeline.to(\".header__title\", {\r\n        duration: 1.1,\r\n        x: 0,\r\n        opacity: 1,\r\n        ease: \"power2.out\",\r\n    }, \"-=0.4\");\r\n\r\n    timeline.to(\".header__buttons\", {\r\n        duration: 1.1,\r\n        x: 0,\r\n        opacity: 1,\r\n        ease: \"power2.out\",\r\n    }, \"-=0.4\");\r\n\r\n    timeline.to(\".header__paragraph\", {\r\n        duration: 1.2,\r\n        x: 0,\r\n        opacity: 1,\r\n        ease: \"power2.out\",\r\n    }, \"-=0.4\");\r\n});\r\n"]}