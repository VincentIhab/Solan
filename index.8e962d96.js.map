{"mappings":"AAAA,MAAM,WAAW,SAAS,aAAa,CAAC;AACxC,MAAM,QAAQ,MAAM,IAAI,CAAC,SAAS,gBAAgB,CAAC;AACnD,MAAM,aAAa,SAAS,cAAc,CAAC;AAC3C,MAAM,aAAa,SAAS,cAAc,CAAC;AAE3C,IAAI,iBAAiB,KAAK,CAAC,EAAE,EAAE,qCAAqC;AAEpE,SAAS;IACP,MAAM,WAAW,OAAO,UAAU,IAAI;IAEtC,MAAM,OAAO,CAAC,CAAC,MAAM;QACnB,KAAK,SAAS,CAAC,MAAM,CAAC,UAAU,QAAQ;QAExC,IAAI,UACF;YAAA,IAAI,UAAU,KAAK,KAAK,CAAC,MAAM,MAAM,GAAG,IAAI;gBAC1C,KAAK,SAAS,CAAC,GAAG,CAAC;gBACnB,iBAAiB,MAAM,8BAA8B;YACvD;QAAA,OACK;YACL,IAAI,UAAU,GAAG;gBACf,KAAK,SAAS,CAAC,GAAG,CAAC;gBACnB,iBAAiB,MAAM,8BAA8B;YACvD,OAAO,IAAI,UAAU,GACnB,KAAK,SAAS,CAAC,GAAG,CAAC;iBACd,IAAI,UAAU,MAAM,MAAM,GAAG,GAClC,KAAK,SAAS,CAAC,GAAG,CAAC;QAEvB;IACF;AACF;AAEA,SAAS;IACP,MAAM,YAAY,MAAM,KAAK;IAC7B,MAAM,IAAI,CAAC;IACX;IACA,+BAA+B;IAC/B,SAAS,WAAW;IACpB,SAAS,SAAS,CAAC,GAAG,CAAC;IACvB,WAAW;QACT,SAAS,SAAS,CAAC,MAAM,CAAC;IAC5B,GAAG,OAAO,8CAA8C;AAC1D;AAEA,SAAS;IACP,MAAM,WAAW,MAAM,GAAG;IAC1B,MAAM,OAAO,CAAC;IACd;IACA,+BAA+B;IAC/B,SAAS,WAAW;IACpB,SAAS,SAAS,CAAC,GAAG,CAAC;IACvB,WAAW;QACT,SAAS,SAAS,CAAC,MAAM,CAAC;IAC5B,GAAG,OAAO,8CAA8C;AAC1D;AAEA,SAAS,iBAAiB,KAAK;IAC7B,IAAI,OAAO,UAAU,GAAG,KAAK;QAC3B,MAAM,OAAO,CAAC,CAAA,OAAQ,KAAK,SAAS,CAAC,MAAM,CAAC;QAC5C,MAAM,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC;IACpC;AACF;AAEA,MAAM,OAAO,CAAC,CAAA;IACZ,KAAK,gBAAgB,CAAC,cAAc;AACtC;AAEA,WAAW,gBAAgB,CAAC,SAAS;AACrC,WAAW,gBAAgB,CAAC,SAAS;AAErC,gBAAgB;AAChB;AAEA,iDAAiD;AACjD,OAAO,gBAAgB,CAAC,UAAU","sources":["src/js/solutions.js"],"sourcesContent":["const carousel = document.querySelector('.carousel');\r\nconst items = Array.from(document.querySelectorAll('.carousel-item'));\r\nconst prevButton = document.getElementById('prev');\r\nconst nextButton = document.getElementById('next');\r\n\r\nlet lastActiveItem = items[0]; // Keep track of the last active item\r\n\r\nfunction updateCarousel() {\r\n  const isMobile = window.innerWidth <= 768;\r\n  \r\n  items.forEach((item, index) => {\r\n    item.classList.remove('active', 'prev', 'next');\r\n    \r\n    if (isMobile) {\r\n      if (index === Math.floor(items.length / 2)) {\r\n        item.classList.add('active');\r\n        lastActiveItem = item; // Update the last active item\r\n      }\r\n    } else {\r\n      if (index === 0) {\r\n        item.classList.add('active');\r\n        lastActiveItem = item; // Update the last active item\r\n      } else if (index === 1) {\r\n        item.classList.add('next');\r\n      } else if (index === items.length - 1) {\r\n        item.classList.add('prev');\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction next() {\r\n  const firstItem = items.shift();\r\n  items.push(firstItem);\r\n  updateCarousel();\r\n  // Trigger reflow for animation\r\n  carousel.offsetWidth;\r\n  carousel.classList.add('transition-next');\r\n  setTimeout(() => {\r\n    carousel.classList.remove('transition-next');\r\n  }, 1000); // Should match the transition duration in CSS\r\n}\r\n\r\nfunction prev() {\r\n  const lastItem = items.pop();\r\n  items.unshift(lastItem);\r\n  updateCarousel();\r\n  // Trigger reflow for animation\r\n  carousel.offsetWidth;\r\n  carousel.classList.add('transition-prev');\r\n  setTimeout(() => {\r\n    carousel.classList.remove('transition-prev');\r\n  }, 1000); // Should match the transition duration in CSS\r\n}\r\n\r\nfunction handleMouseEnter(event) {\r\n  if (window.innerWidth > 768) {\r\n    items.forEach(item => item.classList.remove('active'));\r\n    event.currentTarget.classList.add('active');\r\n  }\r\n}\r\n\r\nitems.forEach(item => {\r\n  item.addEventListener('mouseenter', handleMouseEnter);\r\n});\r\n\r\nprevButton.addEventListener('click', prev);\r\nnextButton.addEventListener('click', next);\r\n\r\n// Initial setup\r\nupdateCarousel();\r\n\r\n// Handle window resize to update carousel layout\r\nwindow.addEventListener('resize', updateCarousel);\r\n"],"names":[],"version":3,"file":"index.8e962d96.js.map","sourceRoot":"/__parcel_source_root/"}