{"mappings":"AAAA,SAAS,gBAAgB,CAAC,oBAAoB;IAC1C,MAAM,mBAAmB,SAAS,cAAc,CAAC;IACjD,MAAM,OAAO,SAAS,IAAI;IAE1B,IAAI,0BAA0B;IAC9B,IAAI,qBAAqB;IACzB,IAAI,mBAAmB;IACvB,MAAM,wBAAwB,KAAK,iDAAiD;IAEpF,MAAM,WAAW,IAAI,qBAAqB,CAAA;QACtC,QAAQ,OAAO,CAAC,CAAA;YACZ,IAAI,MAAM,cAAc,EAAE;gBACtB,IAAI,MAAM,kBAAkB,CAAC,GAAG,GAAG,GAAG;oBAClC,qBAAqB;oBACrB,iBAAiB,UAAU,GAAG,iBAAiB,WAAW,GAAG,iBAAiB,WAAW;gBAC7F,OACI,qBAAqB;gBAGzB,yCAAyC;gBACzC,MAAM,iBAAiB,iBAAiB,qBAAqB,GAAG,GAAG,GAAG,OAAO,OAAO,GAAI,CAAA,OAAO,WAAW,GAAG,IAAI,iBAAiB,YAAY,GAAG,CAAA;gBACjJ,OAAO,QAAQ,CAAC;oBACZ,KAAK;oBACL,UAAU;gBACd;gBAEA,0BAA0B;gBAC1B,KAAK,KAAK,CAAC,SAAS,GAAG;gBACvB,OAAO,gBAAgB,CAAC,SAAS,wBAAwB;oBAAE,SAAS;gBAAM;YAC9E,OAAO;gBACH,KAAK,KAAK,CAAC,SAAS,GAAG;gBACvB,0BAA0B;gBAC1B,OAAO,mBAAmB,CAAC,SAAS;YACxC;QACJ;IACJ,GAAG;QACC,WAAW;IACf;IAEA,SAAS,OAAO,CAAC;IAEjB,SAAS,uBAAuB,KAAK;QACjC,IAAI,CAAC,2BAA2B,MAAM,MAAM,KAAK,GAAG;QAEpD,MAAM,gBAAgB,iBAAiB,WAAW,GAAG,iBAAiB,WAAW;QACjF,MAAM,oBAAoB,iBAAiB,UAAU;QACrD,MAAM,eAAe,MAAM,MAAM,GAAG;QAEpC,IAAI,MAAM,MAAM,GAAG;YACf,uBAAuB;YACvB,IAAI,oBAAoB,eAAe;gBACnC,MAAM,cAAc;gBACpB,oBAAoB;YACxB,OAAO;gBACH,+CAA+C;gBAC/C,KAAK,KAAK,CAAC,SAAS,GAAG;gBACvB,0BAA0B;gBAC1B,OAAO,mBAAmB,CAAC,SAAS;YACxC;eAEA,oBAAoB;QACpB,IAAI,oBAAoB,GAAG;YACvB,MAAM,cAAc;YACpB,oBAAoB;QACxB,OAAO;YACH,iDAAiD;YACjD,KAAK,KAAK,CAAC,SAAS,GAAG;YACvB,0BAA0B;YAC1B,OAAO,mBAAmB,CAAC,SAAS;QACxC;IAER;IAEA,SAAS;QACL,iBAAiB,UAAU,IAAI,AAAC,CAAA,mBAAmB,iBAAiB,UAAU,AAAD,IAAK,MAAM,sBAAsB;QAC9G,sBAAsB;IAC1B;IAEA,MAAM,aAAa,SAAS,sBAAsB,CAAC,wBAAwB,CAAC,EAAE;IAC9E,MAAM,SAAS,WAAW,qBAAqB,GAAG,MAAM,GAAG;IAC3D,MAAM,QAAQ;IACd,IAAI,SAAS;IAEb,KAAK,KAAK,CAAC,MAAM,GAAG,KAAK,KAAK,CAAC,UAAU;IAEzC,SAAS;QACL,IAAI,CAAC,yBAAyB;YAC1B,UAAU,AAAC,CAAA,OAAO,OAAO,GAAG,MAAK,IAAK;YACtC,MAAM,SAAS,iBAAiB,SAAS;YACzC,WAAW,KAAK,CAAC,SAAS,GAAG;QACjC;QAEA,sBAAsB;IAC1B;IAEA;IACA;AACJ","sources":["src/js/solutions.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    const solutionsSection = document.getElementById('solutions-section');\r\n    const body = document.body;\r\n\r\n    let isScrollingHorizontally = false;\r\n    let enteringFromBottom = false;\r\n    let horizontalOffset = 0;\r\n    const horizontalSpeedFactor = 0.8; // Adjust speed factor as needed for acceleration\r\n\r\n    const observer = new IntersectionObserver(entries => {\r\n        entries.forEach(entry => {\r\n            if (entry.isIntersecting) {\r\n                if (entry.boundingClientRect.top < 0) {\r\n                    enteringFromBottom = true;\r\n                    solutionsSection.scrollLeft = solutionsSection.scrollWidth - solutionsSection.clientWidth;\r\n                } else {\r\n                    enteringFromBottom = false;\r\n                }\r\n\r\n                // Center the solutionsSection vertically\r\n                const scrollToCenter = solutionsSection.getBoundingClientRect().top + window.scrollY - (window.innerHeight / 2 - solutionsSection.clientHeight / 2);\r\n                window.scrollTo({\r\n                    top: scrollToCenter,\r\n                    behavior: 'smooth'\r\n                });\r\n\r\n                isScrollingHorizontally = true;\r\n                body.style.overflowY = 'hidden';\r\n                window.addEventListener('wheel', handleHorizontalScroll, { passive: false });\r\n            } else {\r\n                body.style.overflowY = 'auto';\r\n                isScrollingHorizontally = false;\r\n                window.removeEventListener('wheel', handleHorizontalScroll);\r\n            }\r\n        });\r\n    }, {\r\n        threshold: 0.7\r\n    });\r\n\r\n    observer.observe(solutionsSection);\r\n\r\n    function handleHorizontalScroll(event) {\r\n        if (!isScrollingHorizontally || event.deltaY === 0) return;\r\n\r\n        const scrollLeftMax = solutionsSection.scrollWidth - solutionsSection.clientWidth;\r\n        const scrollLeftCurrent = solutionsSection.scrollLeft;\r\n        const scrollAmount = event.deltaY * horizontalSpeedFactor;\r\n\r\n        if (event.deltaY > 0) {\r\n            // Scrolling down/right\r\n            if (scrollLeftCurrent < scrollLeftMax) {\r\n                event.preventDefault();\r\n                horizontalOffset += scrollAmount;\r\n            } else {\r\n                // Allow vertical scroll after reaching the end\r\n                body.style.overflowY = 'auto';\r\n                isScrollingHorizontally = false;\r\n                window.removeEventListener('wheel', handleHorizontalScroll);\r\n            }\r\n        } else {\r\n            // Scrolling up/left\r\n            if (scrollLeftCurrent > 0) {\r\n                event.preventDefault();\r\n                horizontalOffset += scrollAmount;\r\n            } else {\r\n                // Allow vertical scroll after reaching the start\r\n                body.style.overflowY = 'auto';\r\n                isScrollingHorizontally = false;\r\n                window.removeEventListener('wheel', handleHorizontalScroll);\r\n            }\r\n        }\r\n    }\r\n\r\n    function smoothHorizontalScroll() {\r\n        solutionsSection.scrollLeft += (horizontalOffset - solutionsSection.scrollLeft) * 0.11; // Increase smoothness\r\n        requestAnimationFrame(smoothHorizontalScroll);\r\n    }\r\n\r\n    const scrollWrap = document.getElementsByClassName(\"smooth-scroll-wrapper\")[0];\r\n    const height = scrollWrap.getBoundingClientRect().height - 1;\r\n    const speed = 0.01;\r\n    let offset = 0;\r\n    \r\n    body.style.height = Math.floor(height) + \"px\";\r\n    \r\n    function smoothScroll() {\r\n        if (!isScrollingHorizontally) {\r\n            offset += (window.scrollY - offset) * speed;\r\n            const scroll = \"translateY(-\" + offset + \"px) translateZ(0)\";\r\n            scrollWrap.style.transform = scroll;\r\n        }\r\n\r\n        requestAnimationFrame(smoothScroll);\r\n    }\r\n\r\n    smoothScroll();\r\n    smoothHorizontalScroll();\r\n});\r\n"],"names":[],"version":3,"file":"index.8e962d96.js.map","sourceRoot":"/__parcel_source_root/"}