{"mappings":"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","sources":["<anon>","src/js/dom.js"],"sourcesContent":["var $ae0af43c09de0737$exports = {};\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    const spinnerContainer = document.getElementById(\"spinner-container\");\n    const videoContainer = document.getElementById(\"video-container\");\n    const imageContainer = document.getElementById(\"image-container\");\n    const backgroundVideo = document.getElementById(\"background-video\");\n    const navigationButton = document.querySelector(\".navigation__button\");\n    const navbar = document.getElementById(\"navbar\");\n    const newParent = document.getElementById(\"header_contianer\");\n    const oldParent = document.getElementById(\"header\");\n    const scrollThreshold = 100; // The scroll level to trigger the background change\n    let videoLoaded = false;\n    let mobileVideoLoaded = false;\n    let desktopVideoLoaded = false;\n    let currentVideo = \"\";\n    // Load the videos in memory\n    const mobileVideo = document.createElement(\"video\");\n    mobileVideo.src = \"./videos/mobile-Land-video.webm\";\n    mobileVideo.preload = \"auto\";\n    mobileVideo.onloadeddata = ()=>{\n        mobileVideoLoaded = true;\n    };\n    mobileVideo.onerror = (e)=>{\n        console.error(\"Failed to preload mobile video\", e);\n    };\n    const desktopVideo = document.createElement(\"video\");\n    desktopVideo.src = \"./videos/video.mp4\";\n    desktopVideo.preload = \"auto\";\n    desktopVideo.onloadeddata = ()=>{\n        desktopVideoLoaded = true;\n    };\n    desktopVideo.onerror = (e)=>{\n        console.error(\"Failed to preload desktop video\", e);\n    };\n    // Handle scroll changes for the navbar\n    const handleScroll = ()=>{\n        if (window.scrollY > scrollThreshold) {\n            navbar.classList.add(\"scrolled\");\n            navigationButton.classList.add(\"btn-darkin\");\n        } else {\n            navbar.classList.remove(\"scrolled\");\n            navigationButton.classList.remove(\"btn-darkin\");\n        }\n    };\n    const handleScrollOptimized = ()=>{\n        if (!scrolling) {\n            scrolling = true;\n            window.requestAnimationFrame(()=>{\n                handleScroll();\n                scrolling = false;\n            });\n        }\n    };\n    let scrolling = false;\n    // Video load success function\n    const videoLoadSuccess = ()=>{\n        videoLoaded = true;\n        spinnerContainer.classList.add(\"hidden\");\n        videoContainer.style.display = \"block\";\n        imageContainer.style.display = \"none\";\n        handleScroll();\n    };\n    // Video load error function\n    const videoLoadError = (e)=>{\n        console.error(\"Video failed to load\", e);\n        spinnerContainer.classList.add(\"hidden\");\n        videoContainer.style.display = \"none\";\n        imageContainer.style.display = \"block\";\n        handleScroll();\n    };\n    // Select and load the appropriate video based on screen size\n    const selectVideo = ()=>{\n        const videoElement = backgroundVideo;\n        if (window.innerWidth <= 768 && currentVideo !== \"mobile\") {\n            videoElement.src = mobileVideo.src;\n            videoContainer.classList.remove(\"bg-video--desktop\");\n            videoElement.classList.remove(\"bg-video--desktop__content_desk\");\n            videoContainer.classList.add(\"bg-video--mobile\");\n            videoElement.classList.add(\"bg-video--mobile__content_mobile\");\n            oldParent.insertBefore(videoContainer, oldParent.firstChild);\n            currentVideo = \"mobile\";\n        } else if (window.innerWidth > 768 && currentVideo !== \"desktop\") {\n            videoElement.src = desktopVideo.src;\n            videoContainer.classList.remove(\"bg-video--mobile\");\n            videoElement.classList.remove(\"bg-video--mobile__content_mobile\");\n            videoContainer.classList.add(\"bg-video--desktop\");\n            videoElement.classList.add(\"bg-video--desktop__content_desk\");\n            newParent.insertBefore(videoContainer, newParent.firstChild);\n            currentVideo = \"desktop\";\n        }\n        videoElement.onloadeddata = videoLoadSuccess;\n        videoElement.onerror = videoLoadError;\n    };\n    // Timeout to handle video load failure\n    setTimeout(()=>{\n        if (!videoLoaded) {\n            console.warn(\"Video load timeout reached\");\n            spinnerContainer.classList.add(\"hidden\");\n            videoContainer.style.display = \"none\";\n            imageContainer.style.display = \"block\";\n            handleScroll();\n        }\n    }, 12000); // 12 seconds timeout\n    selectVideo();\n    // Listen for window resize events to change the video\n    window.addEventListener(\"resize\", selectVideo);\n    // Throttle the scroll event listener\n    let isScrolling;\n    window.addEventListener(\"scroll\", ()=>{\n        window.clearTimeout(isScrolling);\n        isScrolling = setTimeout(()=>{\n            handleScrollOptimized();\n        }, 100);\n    });\n    // Create an IntersectionObserver for animations to avoid some errors \n    function animateElement(entries, observer) {\n        entries.forEach((entry)=>{\n            if (entry.isIntersecting) {\n                entry.target.classList.add(\"animate\");\n                observer.unobserve(entry.target); // Stop observing after adding the class\n            }\n        });\n    }\n    const observer = new IntersectionObserver(animateElement, {\n        threshold: 0.1\n    });\n    document.querySelectorAll(\".target\").forEach((e)=>{\n        observer.observe(e);\n    });\n    // Overlay for phone nav\n    const checkbox = document.getElementById(\"navi-toggle\");\n    const overlay = document.createElement(\"div\");\n    overlay.classList.add(\"overlay\");\n    checkbox.addEventListener(\"change\", ()=>{\n        if (checkbox.checked) {\n            document.body.appendChild(overlay);\n            setTimeout(()=>overlay.classList.add(\"show\"), 10);\n        } else {\n            overlay.classList.remove(\"show\");\n            overlay.addEventListener(\"transitionend\", ()=>{\n                if (!overlay.classList.contains(\"show\")) overlay.remove();\n            }, {\n                once: true\n            });\n        }\n    });\n    overlay.addEventListener(\"click\", ()=>{\n        checkbox.checked = false;\n        overlay.classList.remove(\"show\");\n        overlay.addEventListener(\"transitionend\", ()=>{\n            if (!overlay.classList.contains(\"show\")) overlay.remove();\n        }, {\n            once: true\n        });\n    });\n    // Intro animation\n    const timeline = gsap.timeline();\n    timeline.to(\".header\", {\n        duration: 2.5,\n        x: 0,\n        opacity: 1,\n        ease: \"power2.out\"\n    }, \"-=0.4\");\n    timeline.to(\".header__spans\", {\n        duration: 1,\n        x: 0,\n        opacity: 1,\n        ease: \"power2.out\"\n    }, \"-=0.4\");\n    timeline.to(\".header__title\", {\n        duration: 1.1,\n        x: 0,\n        opacity: 1,\n        ease: \"power2.out\"\n    }, \"-=0.4\");\n    timeline.to(\".header__buttons\", {\n        duration: 1.1,\n        x: 0,\n        opacity: 1,\n        ease: \"power2.out\"\n    }, \"-=0.4\");\n    timeline.to(\".header__paragraph\", {\n        duration: 1.2,\n        x: 0,\n        opacity: 1,\n        ease: \"power2.out\"\n    }, \"-=0.4\");\n});\n\n\n//# sourceMappingURL=index.e96f007d.js.map\n","document.addEventListener(\"DOMContentLoaded\", function () {\r\n    const spinnerContainer = document.getElementById('spinner-container');\r\n    const videoContainer = document.getElementById('video-container');\r\n    const imageContainer = document.getElementById('image-container');\r\n    const backgroundVideo = document.getElementById('background-video');\r\n    const navigationButton = document.querySelector('.navigation__button');\r\n    const navbar = document.getElementById(\"navbar\");\r\n    const newParent = document.getElementById('header_contianer');\r\n    const oldParent = document.getElementById('header');\r\n    const scrollThreshold = 100; // The scroll level to trigger the background change\r\n\r\n    let videoLoaded = false;\r\n    let mobileVideoLoaded = false;\r\n    let desktopVideoLoaded = false;\r\n    let currentVideo = '';\r\n\r\n    // Load the videos in memory\r\n    const mobileVideo = document.createElement('video');\r\n    mobileVideo.src = './videos/mobile-Land-video.webm';\r\n    mobileVideo.preload = 'auto';\r\n    mobileVideo.onloadeddata = () => {\r\n        \r\n        mobileVideoLoaded = true;\r\n    };\r\n    mobileVideo.onerror = (e) => {\r\n        console.error('Failed to preload mobile video', e);\r\n    };\r\n\r\n    const desktopVideo = document.createElement('video');\r\n    desktopVideo.src = './videos/video.mp4';\r\n    desktopVideo.preload = 'auto';\r\n    desktopVideo.onloadeddata = () => {\r\n        \r\n        desktopVideoLoaded = true;\r\n    };\r\n    desktopVideo.onerror = (e) => {\r\n        console.error('Failed to preload desktop video', e);\r\n    };\r\n\r\n    // Handle scroll changes for the navbar\r\n    const handleScroll = () => {\r\n        if (window.scrollY > scrollThreshold) {\r\n            navbar.classList.add(\"scrolled\");\r\n            navigationButton.classList.add('btn-darkin');\r\n        } else {\r\n            navbar.classList.remove(\"scrolled\");\r\n            navigationButton.classList.remove('btn-darkin');\r\n        }\r\n    };\r\n\r\n    const handleScrollOptimized = () => {\r\n        if (!scrolling) {\r\n            scrolling = true;\r\n            window.requestAnimationFrame(() => {\r\n                handleScroll();\r\n                scrolling = false;\r\n            });\r\n        }\r\n    };\r\n\r\n    let scrolling = false;\r\n\r\n    // Video load success function\r\n    const videoLoadSuccess = () => {\r\n        \r\n        videoLoaded = true;\r\n        spinnerContainer.classList.add('hidden');\r\n        videoContainer.style.display = 'block';\r\n        imageContainer.style.display = 'none';\r\n        handleScroll();\r\n    };\r\n\r\n    // Video load error function\r\n    const videoLoadError = (e) => {\r\n        console.error('Video failed to load', e);\r\n        spinnerContainer.classList.add('hidden');\r\n        videoContainer.style.display = 'none';\r\n        imageContainer.style.display = 'block';\r\n        handleScroll();\r\n    };\r\n\r\n    // Select and load the appropriate video based on screen size\r\n    const selectVideo = () => {\r\n        const videoElement = backgroundVideo;\r\n        if (window.innerWidth <= 768 && currentVideo !== 'mobile') {\r\n            videoElement.src = mobileVideo.src;\r\n            videoContainer.classList.remove('bg-video--desktop')\r\n            videoElement.classList.remove('bg-video--desktop__content_desk')\r\n\r\n            videoContainer.classList.add('bg-video--mobile')\r\n            videoElement.classList.add('bg-video--mobile__content_mobile')\r\n            oldParent.insertBefore(videoContainer, oldParent.firstChild);\r\n\r\n            currentVideo = 'mobile';\r\n        } else if (window.innerWidth > 768 && currentVideo !== 'desktop') {\r\n            videoElement.src = desktopVideo.src;\r\n            videoContainer.classList.remove('bg-video--mobile')\r\n            videoElement.classList.remove('bg-video--mobile__content_mobile')\r\n            \r\n            videoContainer.classList.add('bg-video--desktop')\r\n            videoElement.classList.add('bg-video--desktop__content_desk')\r\n            newParent.insertBefore(videoContainer, newParent.firstChild);\r\n\r\n            currentVideo = 'desktop';\r\n        }\r\n\r\n        videoElement.onloadeddata = videoLoadSuccess;\r\n        videoElement.onerror = videoLoadError;\r\n    };\r\n\r\n    // Timeout to handle video load failure\r\n    setTimeout(() => {\r\n        if (!videoLoaded) {\r\n            console.warn('Video load timeout reached');\r\n            spinnerContainer.classList.add('hidden');\r\n            videoContainer.style.display = 'none';\r\n            imageContainer.style.display = 'block';\r\n            handleScroll();\r\n        }\r\n    }, 12000); // 12 seconds timeout\r\n\r\n    selectVideo();\r\n\r\n    // Listen for window resize events to change the video\r\n    window.addEventListener('resize', selectVideo);\r\n\r\n    // Throttle the scroll event listener\r\n    let isScrolling;\r\n    window.addEventListener(\"scroll\", () => {\r\n        window.clearTimeout(isScrolling);\r\n        isScrolling = setTimeout(() => {\r\n            handleScrollOptimized();\r\n        }, 100);\r\n    });\r\n\r\n    // Create an IntersectionObserver for animations to avoid some errors \r\n    function animateElement(entries, observer) {\r\n        entries.forEach((entry) => {\r\n            if (entry.isIntersecting) {\r\n                entry.target.classList.add(\"animate\");\r\n                observer.unobserve(entry.target); // Stop observing after adding the class\r\n            }\r\n        });\r\n    }\r\n\r\n    const observer = new IntersectionObserver(animateElement, {\r\n        threshold: 0.1, // Adjust as needed\r\n    });\r\n\r\n    document.querySelectorAll(\".target\").forEach((e) => {\r\n        observer.observe(e);\r\n    });\r\n\r\n    // Overlay for phone nav\r\n    const checkbox = document.getElementById('navi-toggle');\r\n    const overlay = document.createElement('div');\r\n    overlay.classList.add('overlay');\r\n\r\n    checkbox.addEventListener('change', () => {\r\n        if (checkbox.checked) {\r\n            document.body.appendChild(overlay);\r\n            setTimeout(() => overlay.classList.add('show'), 10);\r\n        } else {\r\n            overlay.classList.remove('show');\r\n            overlay.addEventListener('transitionend', () => {\r\n                if (!overlay.classList.contains('show')) {\r\n                    overlay.remove();\r\n                }\r\n            }, { once: true });\r\n        }\r\n    });\r\n\r\n    overlay.addEventListener('click', () => {\r\n        checkbox.checked = false;\r\n        overlay.classList.remove('show');\r\n        overlay.addEventListener('transitionend', () => {\r\n            if (!overlay.classList.contains('show')) {\r\n                overlay.remove();\r\n            }\r\n        }, { once: true });\r\n    });\r\n\r\n    // Intro animation\r\n    const timeline = gsap.timeline();\r\n    timeline.to(\".header\", {\r\n        duration: 2.5,\r\n        x: 0,\r\n        opacity: 1,\r\n        ease: \"power2.out\",\r\n    }, \"-=0.4\");\r\n\r\n    timeline.to(\".header__spans\", {\r\n        duration: 1,\r\n        x: 0,\r\n        opacity: 1,\r\n        ease: \"power2.out\",\r\n    }, \"-=0.4\");\r\n\r\n    timeline.to(\".header__title\", {\r\n        duration: 1.1,\r\n        x: 0,\r\n        opacity: 1,\r\n        ease: \"power2.out\",\r\n    }, \"-=0.4\");\r\n\r\n    timeline.to(\".header__buttons\", {\r\n        duration: 1.1,\r\n        x: 0,\r\n        opacity: 1,\r\n        ease: \"power2.out\",\r\n    }, \"-=0.4\");\r\n\r\n    timeline.to(\".header__paragraph\", {\r\n        duration: 1.2,\r\n        x: 0,\r\n        opacity: 1,\r\n        ease: \"power2.out\",\r\n    }, \"-=0.4\");\r\n});\r\n"],"names":["document","addEventListener","isScrolling","spinnerContainer","getElementById","videoContainer","imageContainer","backgroundVideo","navigationButton","querySelector","navbar","newParent","oldParent","videoLoaded","currentVideo","mobileVideo","createElement","src","preload","onloadeddata","onerror","e","console","error","desktopVideo","handleScroll","window","scrollY","classList","add","remove","handleScrollOptimized","scrolling","requestAnimationFrame","videoLoadSuccess","style","display","videoLoadError","selectVideo","innerWidth","videoElement","insertBefore","firstChild","setTimeout","warn","clearTimeout","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","unobserve","threshold","querySelectorAll","observe","checkbox","overlay","checked","body","appendChild","contains","once","timeline","gsap","to","duration","x","opacity","ease"],"version":3,"file":"index.e96f007d.js.map"}