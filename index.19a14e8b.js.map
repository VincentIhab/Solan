{"mappings":"ACAA,MAAM,EAAW,SAAS,aAAa,CAAC,aAClC,EAAQ,MAAM,IAAI,CAAC,SAAS,gBAAgB,CAAC,mBAC7C,EAAa,SAAS,cAAc,CAAC,QACrC,EAAa,SAAS,cAAc,CAAC,QAI3C,SAAS,IACP,IAAM,EAAW,OAAO,UAAU,EAAI,IAEtC,EAAM,OAAO,CAAC,CAAC,EAAM,KACnB,EAAK,SAAS,CAAC,MAAM,CAAC,SAAU,OAAQ,QAEpC,EACE,IAAU,KAAK,KAAK,CAAC,EAAM,MAAM,CAAG,IACtC,EAAK,SAAS,CAAC,GAAG,CAAC,UAIjB,AAAU,IAAV,EACF,EAAK,SAAS,CAAC,GAAG,CAAC,UAEV,AAAU,IAAV,EACT,EAAK,SAAS,CAAC,GAAG,CAAC,QACV,IAAU,EAAM,MAAM,CAAG,GAClC,EAAK,SAAS,CAAC,GAAG,CAAC,OAGzB,EACF,CA0BA,SAAS,EAAiB,CAAK,EACzB,OAAO,UAAU,CAAG,MACtB,EAAM,OAAO,CAAC,AAAA,GAAQ,EAAK,SAAS,CAAC,MAAM,CAAC,WAC5C,EAAM,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,UAEtC,CAvDqB,CAAK,CAAC,EAAE,CAyD7B,EAAM,OAAO,CAAC,AAAA,IACZ,EAAK,gBAAgB,CAAC,aAAc,EACtC,GAEA,EAAW,gBAAgB,CAAC,QAvB5B,WACE,IAAM,EAAW,EAAM,GAAG,GAC1B,EAAM,OAAO,CAAC,GACd,IAEA,EAAS,WAAW,CACpB,EAAS,SAAS,CAAC,GAAG,CAAC,mBACvB,WAAW,KACT,EAAS,SAAS,CAAC,MAAM,CAAC,kBAC5B,EAAG,IACL,GAcA,EAAW,gBAAgB,CAAC,QApC5B,WACE,IAAM,EAAY,EAAM,KAAK,GAC7B,EAAM,IAAI,CAAC,GACX,IAEA,EAAS,WAAW,CACpB,EAAS,SAAS,CAAC,GAAG,CAAC,mBACvB,WAAW,KACT,EAAS,SAAS,CAAC,MAAM,CAAC,kBAC5B,EAAG,IACL,GA6BA,IAGA,OAAO,gBAAgB,CAAC,SAAU","sources":["<anon>","src/js/solutions.js"],"sourcesContent":["const carousel = document.querySelector(\".carousel\");\nconst items = Array.from(document.querySelectorAll(\".carousel-item\"));\nconst prevButton = document.getElementById(\"prev\");\nconst nextButton = document.getElementById(\"next\");\nlet lastActiveItem = items[0]; // Keep track of the last active item\nfunction updateCarousel() {\n    const isMobile = window.innerWidth <= 768;\n    items.forEach((item, index)=>{\n        item.classList.remove(\"active\", \"prev\", \"next\");\n        if (isMobile) {\n            if (index === Math.floor(items.length / 2)) {\n                item.classList.add(\"active\");\n                lastActiveItem = item; // Update the last active item\n            }\n        } else {\n            if (index === 0) {\n                item.classList.add(\"active\");\n                lastActiveItem = item; // Update the last active item\n            } else if (index === 1) item.classList.add(\"next\");\n            else if (index === items.length - 1) item.classList.add(\"prev\");\n        }\n    });\n}\nfunction next() {\n    const firstItem = items.shift();\n    items.push(firstItem);\n    updateCarousel();\n    // Trigger reflow for animation\n    carousel.offsetWidth;\n    carousel.classList.add(\"transition-next\");\n    setTimeout(()=>{\n        carousel.classList.remove(\"transition-next\");\n    }, 1000); // Should match the transition duration in CSS\n}\nfunction prev() {\n    const lastItem = items.pop();\n    items.unshift(lastItem);\n    updateCarousel();\n    // Trigger reflow for animation\n    carousel.offsetWidth;\n    carousel.classList.add(\"transition-prev\");\n    setTimeout(()=>{\n        carousel.classList.remove(\"transition-prev\");\n    }, 1000); // Should match the transition duration in CSS\n}\nfunction handleMouseEnter(event) {\n    if (window.innerWidth > 768) {\n        items.forEach((item)=>item.classList.remove(\"active\"));\n        event.currentTarget.classList.add(\"active\");\n    }\n}\nitems.forEach((item)=>{\n    item.addEventListener(\"mouseenter\", handleMouseEnter);\n});\nprevButton.addEventListener(\"click\", prev);\nnextButton.addEventListener(\"click\", next);\n// Initial setup\nupdateCarousel();\n// Handle window resize to update carousel layout\nwindow.addEventListener(\"resize\", updateCarousel);\n\n//# sourceMappingURL=index.19a14e8b.js.map\n","const carousel = document.querySelector('.carousel');\r\nconst items = Array.from(document.querySelectorAll('.carousel-item'));\r\nconst prevButton = document.getElementById('prev');\r\nconst nextButton = document.getElementById('next');\r\n\r\nlet lastActiveItem = items[0]; // Keep track of the last active item\r\n\r\nfunction updateCarousel() {\r\n  const isMobile = window.innerWidth <= 768;\r\n  \r\n  items.forEach((item, index) => {\r\n    item.classList.remove('active', 'prev', 'next');\r\n    \r\n    if (isMobile) {\r\n      if (index === Math.floor(items.length / 2)) {\r\n        item.classList.add('active');\r\n        lastActiveItem = item; // Update the last active item\r\n      }\r\n    } else {\r\n      if (index === 0) {\r\n        item.classList.add('active');\r\n        lastActiveItem = item; // Update the last active item\r\n      } else if (index === 1) {\r\n        item.classList.add('next');\r\n      } else if (index === items.length - 1) {\r\n        item.classList.add('prev');\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction next() {\r\n  const firstItem = items.shift();\r\n  items.push(firstItem);\r\n  updateCarousel();\r\n  // Trigger reflow for animation\r\n  carousel.offsetWidth;\r\n  carousel.classList.add('transition-next');\r\n  setTimeout(() => {\r\n    carousel.classList.remove('transition-next');\r\n  }, 1000); // Should match the transition duration in CSS\r\n}\r\n\r\nfunction prev() {\r\n  const lastItem = items.pop();\r\n  items.unshift(lastItem);\r\n  updateCarousel();\r\n  // Trigger reflow for animation\r\n  carousel.offsetWidth;\r\n  carousel.classList.add('transition-prev');\r\n  setTimeout(() => {\r\n    carousel.classList.remove('transition-prev');\r\n  }, 1000); // Should match the transition duration in CSS\r\n}\r\n\r\nfunction handleMouseEnter(event) {\r\n  if (window.innerWidth > 768) {\r\n    items.forEach(item => item.classList.remove('active'));\r\n    event.currentTarget.classList.add('active');\r\n  }\r\n}\r\n\r\nitems.forEach(item => {\r\n  item.addEventListener('mouseenter', handleMouseEnter);\r\n});\r\n\r\nprevButton.addEventListener('click', prev);\r\nnextButton.addEventListener('click', next);\r\n\r\n// Initial setup\r\nupdateCarousel();\r\n\r\n// Handle window resize to update carousel layout\r\nwindow.addEventListener('resize', updateCarousel);\r\n"],"names":["carousel","document","querySelector","items","Array","from","querySelectorAll","prevButton","getElementById","nextButton","updateCarousel","isMobile","window","innerWidth","forEach","item","index","classList","remove","Math","floor","length","add","handleMouseEnter","event","currentTarget","addEventListener","lastItem","pop","unshift","offsetWidth","setTimeout","firstItem","shift","push"],"version":3,"file":"index.19a14e8b.js.map"}