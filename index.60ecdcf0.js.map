{"mappings":"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","sources":["<anon>","src/js/dom.js"],"sourcesContent":["var $ae0af43c09de0737$exports = {};\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    class PageHandler {\n        constructor(){\n            this.loadingBar = document.getElementById(\"loading-bar\");\n            this.spinnerContainer = document.getElementById(\"spinner-container\");\n            this.videoContainer = document.getElementById(\"video-container\");\n            this.backgroundVideo = document.getElementById(\"background-video\");\n            this.navVideo = document.getElementById(\"navVideo\");\n            this.navigationButton = document.querySelector(\".navigation__button\");\n            this.navbar = document.getElementById(\"navbar\");\n            this.newParent = document.getElementById(\"header_container\");\n            this.oldParent = document.getElementById(\"header\");\n            this.box2 = document.querySelector(\".box2\");\n            this.scrollThreshold = 100;\n            this.mobileVideoSrc = \"mobile-Land-video.mp4\";\n            this.desktopVideoSrc = \"video.mp4\";\n            this.navVideoSrc = \"nav-cam.mp4\";\n            this.currentVideo = \"\";\n            this.videoLoaded = false;\n            this.scrolling = false;\n            this.isFirstTime = true;\n            this.init();\n        }\n        init() {\n            this.startLoadingBar();\n            this.selectVideo();\n            this.navVideo.src = this.navVideoSrc;\n            this.navVideo.type = \"video/mp4\";\n            window.addEventListener(\"resize\", this.selectVideo.bind(this));\n            window.addEventListener(\"scroll\", this.throttleScroll.bind(this));\n            this.createIntersectionObserver();\n            this.initOverlay();\n            this.initIntroAnimation();\n            this.initFeatureBoxVideo();\n        }\n        startLoadingBar() {\n            let interval = setInterval(()=>{\n                const images = document.images;\n                let loadedImages = 0;\n                for(let i = 0; i < images.length; i++)if (images[i].complete) loadedImages++;\n                let progress = Math.floor(loadedImages / images.length * 100);\n                this.loadingBar.style.width = progress + \"%\";\n                this.loadingBar.style.backgroundColor = `rgb(${255 - progress * 2.55}, ${255 - progress * 2.55}, ${255 - progress * 2.55})`;\n                if (progress === 100) {\n                    clearInterval(interval);\n                    this.loadingBar.style.width = \"100%\";\n                    this.loadingBar.style.backgroundColor = \"black\";\n                }\n            }, 100);\n        }\n        selectVideo() {\n            const videoElement = this.backgroundVideo;\n            videoElement.muted = true;\n            videoElement.playsinline = true;\n            if (window.innerWidth <= 768 && this.currentVideo !== \"mobile\") {\n                videoElement.src = this.mobileVideoSrc;\n                videoElement.type = \"video/mp4\";\n                this.videoContainer.classList.remove(\"bg-video--desktop\");\n                videoElement.classList.remove(\"bg-video--desktop__content_desk\");\n                this.videoContainer.classList.add(\"bg-video--mobile\");\n                videoElement.classList.add(\"bg-video--mobile__content_mobile\");\n                videoElement.loop = false;\n                this.oldParent.insertBefore(this.videoContainer, this.oldParent.firstChild);\n                this.currentVideo = \"mobile\";\n            } else if (window.innerWidth > 768 && this.currentVideo !== \"desktop\") {\n                videoElement.src = this.desktopVideoSrc;\n                videoElement.type = \"video/mp4\";\n                this.videoContainer.classList.remove(\"bg-video--mobile\");\n                videoElement.classList.remove(\"bg-video--mobile__content_mobile\");\n                this.videoContainer.classList.add(\"bg-video--desktop\");\n                videoElement.classList.add(\"bg-video--desktop__content_desk\");\n                this.newParent.insertBefore(this.videoContainer, this.newParent.firstChild);\n                this.currentVideo = \"desktop\";\n            }\n            videoElement.onloadeddata = this.videoLoadSuccess.bind(this);\n            videoElement.onerror = this.videoLoadError.bind(this);\n        }\n        videoLoadSuccess() {\n            this.videoLoaded = true;\n            this.spinnerContainer.classList.add(\"hidden\");\n            this.videoContainer.style.display = \"block\";\n        }\n        videoLoadError() {\n            this.selectVideo();\n        }\n        throttleScroll() {\n            if (!this.scrolling) {\n                this.scrolling = true;\n                window.requestAnimationFrame(()=>{\n                    this.handleScroll();\n                    this.scrolling = false;\n                });\n            }\n        }\n        handleScroll() {\n            if (window.scrollY > this.scrollThreshold) this.navbar.classList.add(\"scrolled\");\n            else this.navbar.classList.remove(\"scrolled\");\n        }\n        createIntersectionObserver() {\n            const observer = new IntersectionObserver(this.animateElement.bind(this), {\n                threshold: 0.1\n            });\n            const elementsToAnimate = document.querySelectorAll(\".target\");\n            elementsToAnimate.forEach((element)=>{\n                let delay = 0;\n                if (element.classList.contains(\"box1\")) delay = 0;\n                else if (element.classList.contains(\"box2\")) delay = 1000;\n                else if (element.classList.contains(\"box3\")) delay = 1000;\n                else if (element.classList.contains(\"box4\")) delay = 1000;\n                element.setAttribute(\"data-delay\", delay);\n                observer.observe(element);\n            });\n        }\n        animateElement(entries, observer) {\n            entries.forEach((entry)=>{\n                if (entry.isIntersecting) {\n                    const delay = parseInt(entry.target.getAttribute(\"data-delay\")) || 0;\n                    setTimeout(()=>{\n                        const animationClass = entry.target.getAttribute(\"data-class\");\n                        entry.target.classList.add(animationClass);\n                        observer.unobserve(entry.target);\n                        this.box2.classList.add(\"box2__fadeImg\");\n                    }, delay);\n                }\n            });\n        }\n        initOverlay() {\n            const checkbox = document.getElementById(\"navi-toggle\");\n            const overlay = document.createElement(\"div\");\n            overlay.classList.add(\"overlay\");\n            checkbox.addEventListener(\"change\", ()=>{\n                if (checkbox.checked) {\n                    document.body.appendChild(overlay);\n                    setTimeout(()=>overlay.classList.add(\"show\"), 10);\n                } else {\n                    overlay.classList.remove(\"show\");\n                    overlay.addEventListener(\"transitionend\", ()=>{\n                        if (!overlay.classList.contains(\"show\")) overlay.remove();\n                    }, {\n                        once: true\n                    });\n                }\n            });\n            overlay.addEventListener(\"click\", ()=>{\n                checkbox.checked = false;\n                overlay.classList.remove(\"show\");\n                overlay.addEventListener(\"transitionend\", ()=>{\n                    if (!overlay.classList.contains(\"show\")) overlay.remove();\n                }, {\n                    once: true\n                });\n            });\n        }\n        initIntroAnimation() {\n            const timeline = gsap.timeline();\n            timeline.to(\".header\", {\n                duration: 2.5,\n                x: 0,\n                opacity: 1,\n                ease: \"power2.out\"\n            }, \"-=0.4\").to(\".header__spans\", {\n                duration: 1,\n                x: 0,\n                opacity: 1,\n                ease: \"power2.out\"\n            }, \"-=0.4\").to(\".header__title\", {\n                duration: 1.1,\n                x: 0,\n                opacity: 1,\n                ease: \"power2.out\"\n            }, \"-=0.4\").to(\".header__buttons\", {\n                duration: 1.1,\n                x: 0,\n                opacity: 1,\n                ease: \"power2.out\"\n            }, \"-=0.4\").to(\".header__paragraph\", {\n                duration: 1.2,\n                x: 0,\n                opacity: 1,\n                ease: \"power2.out\"\n            }, \"-=0.4\");\n        }\n        initFeatureBoxVideo() {\n            const page2Trigger = document.querySelector(\".box1\");\n            this.featureBoxVideoContainer = document.getElementById(\"feature-box\");\n            const videoSource = this.featureBoxVideoContainer.querySelector(\"source\");\n            let isVideoLoaded = false;\n            this.isFirstTime = true;\n            const loadVideo = ()=>{\n                if (!videoSource.src) {\n                    videoSource.src = videoSource.dataset.src;\n                    this.featureBoxVideoContainer.load();\n                    isVideoLoaded = true;\n                }\n            };\n            const debounce = (func, delay)=>{\n                let inDebounce;\n                return function() {\n                    clearTimeout(inDebounce);\n                    inDebounce = setTimeout(()=>func.apply(this, arguments), delay);\n                };\n            };\n            const handleVideoPlayback = (entries)=>{\n                entries.forEach((entry)=>{\n                    if (entry.isIntersecting) {\n                        loadVideo();\n                        if (this.isFirstTime && !this.isMobileDevice()) {\n                            this.debouncePlayVideo();\n                            this.isFirstTime = false;\n                        } else if (this.isMobileDevice()) this.featureBoxVideoContainer.play();\n                    } else this.featureBoxVideoContainer.pause();\n                });\n            };\n            const observer = new IntersectionObserver(handleVideoPlayback, {\n                threshold: 0.5\n            });\n            observer.observe(page2Trigger);\n            if (!this.isMobileDevice()) {\n                page2Trigger.addEventListener(\"mouseover\", debounce(()=>{\n                    this.featureBoxVideoContainer.play();\n                }, 100));\n                page2Trigger.addEventListener(\"mouseleave\", debounce(()=>{\n                    this.featureBoxVideoContainer.pause();\n                }, 100));\n            } else {\n                this.featureBoxVideoContainer.loop = true;\n                observer.observe(this.featureBoxVideoContainer);\n            }\n        }\n        isMobileDevice() {\n            return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n        }\n        debouncePlayVideo() {\n            setTimeout(()=>{\n                this.featureBoxVideoContainer.play();\n                setTimeout(()=>{\n                    this.featureBoxVideoContainer.pause();\n                }, this.featureBoxVideoContainer.duration / 2 * 1000); // Pause at half the duration\n            }, 500);\n        }\n        debouncePauseVideo() {\n            setTimeout(()=>{\n                this.featureBoxVideoContainer.pause();\n            }, 500);\n        }\n    }\n    new PageHandler();\n});\n\n\n//# sourceMappingURL=index.60ecdcf0.js.map\n","document.addEventListener(\"DOMContentLoaded\", function () {\r\n    class PageHandler {\r\n        constructor() {\r\n            this.loadingBar = document.getElementById('loading-bar');\r\n            this.spinnerContainer = document.getElementById('spinner-container');\r\n            this.videoContainer = document.getElementById('video-container');\r\n            this.backgroundVideo = document.getElementById('background-video');\r\n            this.navVideo = document.getElementById('navVideo');\r\n            this.navigationButton = document.querySelector('.navigation__button');\r\n            this.navbar = document.getElementById(\"navbar\");\r\n            this.newParent = document.getElementById('header_container');\r\n            this.oldParent = document.getElementById('header');\r\n            this.box2 = document.querySelector('.box2');\r\n            this.scrollThreshold = 100;\r\n            this.mobileVideoSrc = 'mobile-Land-video.mp4';\r\n            this.desktopVideoSrc = 'video.mp4';\r\n            this.navVideoSrc = 'nav-cam.mp4';\r\n            this.currentVideo = '';\r\n            this.videoLoaded = false;\r\n            this.scrolling = false;\r\n            this.isFirstTime = true;\r\n\r\n            this.init();\r\n        }\r\n\r\n        init() {\r\n            this.startLoadingBar();\r\n            this.selectVideo();\r\n            this.navVideo.src = this.navVideoSrc;\r\n            this.navVideo.type = 'video/mp4';\r\n            window.addEventListener('resize', this.selectVideo.bind(this));\r\n            window.addEventListener('scroll', this.throttleScroll.bind(this));\r\n            this.createIntersectionObserver();\r\n            this.initOverlay();\r\n            this.initIntroAnimation();\r\n            this.initFeatureBoxVideo();\r\n        }\r\n\r\n        startLoadingBar() {\r\n            let interval = setInterval(() => {\r\n                const images = document.images;\r\n                let loadedImages = 0;\r\n                for (let i = 0; i < images.length; i++) {\r\n                    if (images[i].complete) {\r\n                        loadedImages++;\r\n                    }\r\n                }\r\n                let progress = Math.floor((loadedImages / images.length) * 100);\r\n                this.loadingBar.style.width = progress + '%';\r\n                this.loadingBar.style.backgroundColor = `rgb(${255 - (progress * 2.55)}, ${255 - (progress * 2.55)}, ${255 - (progress * 2.55)})`;\r\n\r\n                if (progress === 100) {\r\n                    clearInterval(interval);\r\n                    this.loadingBar.style.width = '100%';\r\n                    this.loadingBar.style.backgroundColor = 'black';\r\n                }\r\n            }, 100);\r\n        }\r\n\r\n        selectVideo() {\r\n            const videoElement = this.backgroundVideo;\r\n            videoElement.muted = true;\r\n            videoElement.playsinline = true;\r\n\r\n            if (window.innerWidth <= 768 && this.currentVideo !== 'mobile') {\r\n                videoElement.src = this.mobileVideoSrc;\r\n                videoElement.type = 'video/mp4';\r\n                this.videoContainer.classList.remove('bg-video--desktop');\r\n                videoElement.classList.remove('bg-video--desktop__content_desk');\r\n                this.videoContainer.classList.add('bg-video--mobile');\r\n                videoElement.classList.add('bg-video--mobile__content_mobile');\r\n                videoElement.loop = false;\r\n                this.oldParent.insertBefore(this.videoContainer, this.oldParent.firstChild);\r\n                this.currentVideo = 'mobile';\r\n            } else if (window.innerWidth > 768 && this.currentVideo !== 'desktop') {\r\n                videoElement.src = this.desktopVideoSrc;\r\n                videoElement.type = 'video/mp4';\r\n                this.videoContainer.classList.remove('bg-video--mobile');\r\n                videoElement.classList.remove('bg-video--mobile__content_mobile');\r\n                this.videoContainer.classList.add('bg-video--desktop');\r\n                videoElement.classList.add('bg-video--desktop__content_desk');\r\n                this.newParent.insertBefore(this.videoContainer, this.newParent.firstChild);\r\n                this.currentVideo = 'desktop';\r\n            }\r\n\r\n            videoElement.onloadeddata = this.videoLoadSuccess.bind(this);\r\n            videoElement.onerror = this.videoLoadError.bind(this);\r\n        }\r\n\r\n        videoLoadSuccess() {\r\n            this.videoLoaded = true;\r\n            this.spinnerContainer.classList.add('hidden');\r\n            this.videoContainer.style.display = 'block';\r\n        }\r\n\r\n        videoLoadError() {\r\n            this.selectVideo();\r\n        }\r\n\r\n        throttleScroll() {\r\n            if (!this.scrolling) {\r\n                this.scrolling = true;\r\n                window.requestAnimationFrame(() => {\r\n                    this.handleScroll();\r\n                    this.scrolling = false;\r\n                });\r\n            }\r\n        }\r\n\r\n        handleScroll() {\r\n            if (window.scrollY > this.scrollThreshold) {\r\n                this.navbar.classList.add(\"scrolled\");\r\n            } else {\r\n                this.navbar.classList.remove(\"scrolled\");\r\n            }\r\n        }\r\n\r\n        createIntersectionObserver() {\r\n            const observer = new IntersectionObserver(this.animateElement.bind(this), { threshold: 0.1 });\r\n            const elementsToAnimate = document.querySelectorAll('.target');\r\n\r\n            elementsToAnimate.forEach((element) => {\r\n                let delay = 0;\r\n                if (element.classList.contains('box1')) {\r\n                    delay = 0;\r\n                } else if (element.classList.contains('box2')) {\r\n                    delay = 1000; \r\n                } else if (element.classList.contains('box3')) {\r\n                    delay = 1000;\r\n                } else if (element.classList.contains('box4')) {\r\n                    delay = 1000; \r\n                }\r\n\r\n                element.setAttribute('data-delay', delay);\r\n                observer.observe(element);\r\n            });\r\n        }\r\n\r\n        animateElement(entries, observer) {\r\n            entries.forEach((entry) => {\r\n                if (entry.isIntersecting) {\r\n                    const delay = parseInt(entry.target.getAttribute('data-delay')) || 0;\r\n                    setTimeout(() => {\r\n                        const animationClass = entry.target.getAttribute('data-class');\r\n                        entry.target.classList.add(animationClass);\r\n                        observer.unobserve(entry.target);\r\n                        this.box2.classList.add('box2__fadeImg');\r\n                    }, delay);\r\n                }\r\n            });\r\n        }\r\n\r\n        initOverlay() {\r\n            const checkbox = document.getElementById('navi-toggle');\r\n            const overlay = document.createElement('div');\r\n            overlay.classList.add('overlay');\r\n\r\n            checkbox.addEventListener('change', () => {\r\n                if (checkbox.checked) {\r\n                    document.body.appendChild(overlay);\r\n                    setTimeout(() => overlay.classList.add('show'), 10);\r\n                } else {\r\n                    overlay.classList.remove('show');\r\n                    overlay.addEventListener('transitionend', () => {\r\n                        if (!overlay.classList.contains('show')) {\r\n                            overlay.remove();\r\n                        }\r\n                    }, { once: true });\r\n                }\r\n            });\r\n\r\n            overlay.addEventListener('click', () => {\r\n                checkbox.checked = false;\r\n                overlay.classList.remove('show');\r\n                overlay.addEventListener('transitionend', () => {\r\n                    if (!overlay.classList.contains('show')) {\r\n                        overlay.remove();\r\n                    }\r\n                }, { once: true });\r\n            });\r\n        }\r\n\r\n        initIntroAnimation() {\r\n            const timeline = gsap.timeline();\r\n            timeline.to(\".header\", { duration: 2.5, x: 0, opacity: 1, ease: \"power2.out\" }, \"-=0.4\")\r\n                .to(\".header__spans\", { duration: 1, x: 0, opacity: 1, ease: \"power2.out\" }, \"-=0.4\")\r\n                .to(\".header__title\", { duration: 1.1, x: 0, opacity: 1, ease: \"power2.out\" }, \"-=0.4\")\r\n                .to(\".header__buttons\", { duration: 1.1, x: 0, opacity: 1, ease: \"power2.out\" }, \"-=0.4\")\r\n                .to(\".header__paragraph\", { duration: 1.2, x: 0, opacity: 1, ease: \"power2.out\" }, \"-=0.4\");\r\n        }\r\n\r\n        initFeatureBoxVideo() {\r\n            const page2Trigger = document.querySelector('.box1');\r\n            this.featureBoxVideoContainer = document.getElementById('feature-box');\r\n            const videoSource = this.featureBoxVideoContainer.querySelector('source');\r\n            let isVideoLoaded = false;\r\n            this.isFirstTime = true;\r\n        \r\n            const loadVideo = () => {\r\n                if (!videoSource.src) {\r\n                    videoSource.src = videoSource.dataset.src;\r\n                    this.featureBoxVideoContainer.load();\r\n                    isVideoLoaded = true;\r\n                }\r\n            };\r\n        \r\n            const debounce = (func, delay) => {\r\n                let inDebounce;\r\n                return function () {\r\n                    clearTimeout(inDebounce);\r\n                    inDebounce = setTimeout(() => func.apply(this, arguments), delay);\r\n                };\r\n            };\r\n        \r\n            const handleVideoPlayback = (entries) => {\r\n                entries.forEach(entry => {\r\n                    if (entry.isIntersecting) {\r\n                        loadVideo();\r\n                        if (this.isFirstTime && !this.isMobileDevice()) {\r\n                            this.debouncePlayVideo();\r\n                            this.isFirstTime = false;\r\n                        } else if (this.isMobileDevice()) {\r\n                            this.featureBoxVideoContainer.play();\r\n                        }\r\n                    } else {\r\n                        this.featureBoxVideoContainer.pause();\r\n                    }\r\n                });\r\n            };\r\n        \r\n            const observer = new IntersectionObserver(handleVideoPlayback, { threshold: 0.5 });\r\n            observer.observe(page2Trigger);\r\n        \r\n            if (!this.isMobileDevice()) {\r\n                page2Trigger.addEventListener('mouseover', debounce(() => {\r\n                    this.featureBoxVideoContainer.play();\r\n                }, 100));\r\n                page2Trigger.addEventListener('mouseleave', debounce(() => {\r\n                    this.featureBoxVideoContainer.pause();\r\n                }, 100));\r\n            } else {\r\n                this.featureBoxVideoContainer.loop = true;\r\n                observer.observe(this.featureBoxVideoContainer);\r\n            }\r\n        }\r\n        \r\n        isMobileDevice() {\r\n            return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        }\r\n        \r\n        debouncePlayVideo() {\r\n            setTimeout(() => {\r\n                this.featureBoxVideoContainer.play();\r\n                setTimeout(() => {\r\n                    this.featureBoxVideoContainer.pause();\r\n                }, this.featureBoxVideoContainer.duration / 2 * 1000); // Pause at half the duration\r\n            }, 500);\r\n        }\r\n        \r\n        debouncePauseVideo() {\r\n            setTimeout(() => {\r\n                this.featureBoxVideoContainer.pause();\r\n            }, 500);\r\n        }\r\n        \r\n    }\r\n\r\n    new PageHandler();\r\n});\r\n"],"names":["document","addEventListener","constructor","loadingBar","getElementById","spinnerContainer","videoContainer","backgroundVideo","navVideo","navigationButton","querySelector","navbar","newParent","oldParent","box2","scrollThreshold","mobileVideoSrc","desktopVideoSrc","navVideoSrc","currentVideo","videoLoaded","scrolling","isFirstTime","init","startLoadingBar","selectVideo","src","type","window","bind","throttleScroll","createIntersectionObserver","initOverlay","initIntroAnimation","initFeatureBoxVideo","interval","setInterval","images","loadedImages","i","length","complete","progress","Math","floor","style","width","backgroundColor","clearInterval","videoElement","muted","playsinline","innerWidth","classList","remove","add","loop","insertBefore","firstChild","onloadeddata","videoLoadSuccess","onerror","videoLoadError","display","requestAnimationFrame","handleScroll","scrollY","observer","IntersectionObserver","animateElement","threshold","elementsToAnimate","querySelectorAll","forEach","element","delay","contains","setAttribute","observe","entries","entry","isIntersecting","setTimeout","animationClass","target","getAttribute","unobserve","parseInt","checkbox","overlay","createElement","checked","body","appendChild","once","timeline","gsap","to","duration","x","opacity","ease","page2Trigger","featureBoxVideoContainer","videoSource","loadVideo","dataset","load","debounce","func","inDebounce","clearTimeout","apply","arguments","isMobileDevice","debouncePlayVideo","play","pause","test","navigator","userAgent","debouncePauseVideo"],"version":3,"file":"index.60ecdcf0.js.map"}