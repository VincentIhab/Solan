{"version":3,"sources":["js/dom.js"],"names":["document","addEventListener","videoElement","isScrolling","spinnerContainer","getElementById","videoContainer","imageContainer","navigationButton","querySelector","navbar","videoLoaded","handleScroll","window","scrollY","classList","add","remove","scrolling","videoLoadSuccess","console","log","videoLoadError","e","error","setTimeout","warn","createElement","autoplay","loop","muted","innerWidth","src","onloadeddata","onerror","appendChild","clearTimeout","requestAnimationFrame","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","unobserve","threshold","querySelectorAll","observe","checkbox","overlay","checked","body","contains","once","timeline","gsap","to","duration","x","opacity","ease"],"mappings":"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","file":"dom.c1bd836c.js","sourceRoot":"..\\src","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\r\n    const spinnerContainer = document.getElementById('spinner-container');\r\n    const videoContainer = document.getElementById('video-container');\r\n    const imageContainer = document.getElementById('image-container');\r\n    const navigationButton = document.querySelector('.navigation__button');\r\n    const navbar = document.getElementById(\"navbar\");\r\n    const scrollThreshold = 100; // The scroll level to trigger the background change\r\n\r\n    let videoLoaded = false;\r\n\r\n    const handleScroll = () => {\r\n        if (window.scrollY > scrollThreshold) {\r\n            navbar.classList.add(\"scrolled\");\r\n            navigationButton.classList.add('btn-darkin');\r\n        } else {\r\n            navbar.classList.remove(\"scrolled\");\r\n            navigationButton.classList.remove('btn-darkin');\r\n        }\r\n    };\r\n\r\n    const handleScrollOptimized = () => {\r\n        if (!scrolling) {\r\n            scrolling = true;\r\n            window.requestAnimationFrame(() => {\r\n                handleScroll();\r\n                scrolling = false;\r\n            });\r\n        }\r\n    };\r\n\r\n    let scrolling = false;\r\n\r\n    // Video load success function\r\n    const videoLoadSuccess = () => {\r\n        console.log('Video loaded successfully');\r\n        videoLoaded = true;\r\n        spinnerContainer.classList.add('hidden');\r\n        videoContainer.classList.remove('hidden');\r\n        imageContainer.classList.add('hidden');\r\n        handleScroll();\r\n    };\r\n\r\n    // Video load error function\r\n    const videoLoadError = (e) => {\r\n        console.error('Video failed to load', e);\r\n        spinnerContainer.classList.add('hidden');\r\n        videoContainer.classList.add('hidden');\r\n        imageContainer.classList.remove('hidden');\r\n        handleScroll();\r\n    };\r\n\r\n    // Select and load the appropriate video\r\n    const selectVideo = () => {\r\n        const videoElement = document.createElement('video');\r\n        videoElement.classList.add('bg-video__content');\r\n        videoElement.autoplay = true;\r\n        videoElement.loop = true;\r\n        videoElement.muted = true;\r\n\r\n        if (window.innerWidth <= 768) {\r\n            console.log('Selecting mobile video');\r\n            videoElement.src = './videos/video.mp4';\r\n        } else {\r\n            console.log('Selecting desktop video');\r\n            videoElement.src = './videos/video.mp4';\r\n        }\r\n\r\n        videoElement.onloadeddata = videoLoadSuccess;\r\n        videoElement.onerror = videoLoadError;\r\n\r\n        videoContainer.appendChild(videoElement);\r\n    };\r\n\r\n    setTimeout(() => {\r\n        if (!videoLoaded) {\r\n            console.warn('Video load timeout reached');\r\n            spinnerContainer.classList.add('hidden');\r\n            videoContainer.classList.add('hidden');\r\n            imageContainer.classList.remove('hidden');\r\n            handleScroll();\r\n        }\r\n    }, 12000); // 12 seconds timeout\r\n\r\n    selectVideo();\r\n\r\n    // Throttle the scroll event listener\r\n    let isScrolling;\r\n    window.addEventListener(\"scroll\", () => {\r\n        window.clearTimeout(isScrolling);\r\n        isScrolling = setTimeout(() => {\r\n            handleScrollOptimized();\r\n        }, 100);\r\n    });\r\n\r\n    // Create an IntersectionObserver for animations to avoid some errors \r\n    function animateElement(entries, observer) {\r\n        entries.forEach((entry) => {\r\n            if (entry.isIntersecting) {\r\n                entry.target.classList.add(\"animate\");\r\n                observer.unobserve(entry.target); // Stop observing after adding the class\r\n            }\r\n        });\r\n    }\r\n\r\n    const observer = new IntersectionObserver(animateElement, {\r\n        threshold: 0.1, // Adjust as needed\r\n    });\r\n\r\n    document.querySelectorAll(\".target\").forEach((e) => {\r\n        observer.observe(e);\r\n    });\r\n\r\n    // Overlay for phone nav\r\n    const checkbox = document.getElementById('navi-toggle');\r\n    const overlay = document.createElement('div');\r\n    overlay.classList.add('overlay');\r\n\r\n    checkbox.addEventListener('change', () => {\r\n        if (checkbox.checked) {\r\n            document.body.appendChild(overlay);\r\n            setTimeout(() => overlay.classList.add('show'), 10);\r\n        } else {\r\n            overlay.classList.remove('show');\r\n            overlay.addEventListener('transitionend', () => {\r\n                if (!overlay.classList.contains('show')) {\r\n                    overlay.remove();\r\n                }\r\n            }, { once: true });\r\n        }\r\n    });\r\n\r\n    overlay.addEventListener('click', () => {\r\n        checkbox.checked = false;\r\n        overlay.classList.remove('show');\r\n        overlay.addEventListener('transitionend', () => {\r\n            if (!overlay.classList.contains('show')) {\r\n                overlay.remove();\r\n            }\r\n        }, { once: true });\r\n    });\r\n\r\n    // Intro animation\r\n    const timeline = gsap.timeline();\r\n    timeline.to(\".header\", {\r\n        duration: 2.5,\r\n        x: 0,\r\n        opacity: 1,\r\n        ease: \"power2.out\",\r\n    }, \"-=0.4\");\r\n\r\n    timeline.to(\".header__spans\", {\r\n        duration: 1,\r\n        x: 0,\r\n        opacity: 1,\r\n        ease: \"power2.out\",\r\n    }, \"-=0.4\");\r\n\r\n    timeline.to(\".header__title\", {\r\n        duration: 1.1,\r\n        x: 0,\r\n        opacity: 1,\r\n        ease: \"power2.out\",\r\n    }, \"-=0.4\");\r\n\r\n    timeline.to(\".header__buttons\", {\r\n        duration: 1.1,\r\n        x: 0,\r\n        opacity: 1,\r\n        ease: \"power2.out\",\r\n    }, \"-=0.4\");\r\n\r\n    timeline.to(\".header__paragraph\", {\r\n        duration: 1.2,\r\n        x: 0,\r\n        opacity: 1,\r\n        ease: \"power2.out\",\r\n    }, \"-=0.4\");\r\n});\r\n"]}