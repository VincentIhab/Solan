{"mappings":"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","sources":["<anon>","src/js/dom.js"],"sourcesContent":["var $ae0af43c09de0737$exports = {};\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    class PageHandler {\n        constructor(){\n            this.loadingBar = document.getElementById(\"loading-bar\");\n            this.spinnerContainer = document.getElementById(\"spinner-container\");\n            this.videoContainer = document.getElementById(\"video-container\");\n            this.backgroundVideo = document.getElementById(\"background-video\");\n            this.navVideo = document.getElementById(\"navVideo\");\n            this.navigationButton = document.querySelector(\".navigation__button\");\n            this.navbar = document.getElementById(\"navbar\");\n            this.navBtn = document.getElementById(\"btn-desk\");\n            this.newParent = document.getElementById(\"header_container\");\n            this.oldParent = document.getElementById(\"header\");\n            this.box2 = document.querySelector(\".box2\");\n            this.scrollThreshold = 100;\n            this.mobileVideoSrc = \"mobile-Land-video.mp4\";\n            this.desktopVideoSrc = \"video (2).mp4\";\n            this.navVideoSrc = \"nav-cam.mp4\";\n            this.currentVideo = \"\";\n            this.videoLoaded = false;\n            this.scrolling = false;\n            this.isFirstTime = true;\n            this.init();\n        }\n        init() {\n            this.startLoadingBar();\n            this.selectVideo();\n            this.navVideo.src = this.navVideoSrc;\n            this.navVideo.type = \"video/mp4\";\n            window.addEventListener(\"resize\", this.selectVideo.bind(this));\n            window.addEventListener(\"scroll\", this.throttleScroll.bind(this));\n            this.createIntersectionObserver();\n            this.initOverlay();\n            this.initIntroAnimation();\n            this.initFeatureBoxVideo();\n        }\n        startLoadingBar() {\n            let interval = setInterval(()=>{\n                const images = document.images;\n                let loadedImages = 0;\n                for(let i = 0; i < images.length; i++)if (images[i].complete) loadedImages++;\n                let progress = Math.floor(loadedImages / images.length * 100);\n                this.loadingBar.style.width = progress + \"%\";\n                this.loadingBar.style.backgroundColor = `rgb(${255 - progress * 2.55}, ${255 - progress * 2.55}, ${255 - progress * 2.55})`;\n                if (progress === 100) {\n                    clearInterval(interval);\n                    this.loadingBar.style.width = \"100%\";\n                    this.loadingBar.style.backgroundColor = \"black\";\n                }\n            }, 100);\n        }\n        selectVideo() {\n            const videoElement = this.backgroundVideo;\n            videoElement.muted = true;\n            videoElement.playsinline = true;\n            if (window.innerWidth <= 768 && this.currentVideo !== \"mobile\") {\n                videoElement.src = this.mobileVideoSrc;\n                videoElement.type = \"video/mp4\";\n                this.videoContainer.classList.remove(\"bg-video--desktop\");\n                videoElement.classList.remove(\"bg-video--desktop__content_desk\");\n                this.videoContainer.classList.add(\"bg-video--mobile\");\n                videoElement.classList.add(\"bg-video--mobile__content_mobile\");\n                videoElement.loop = false;\n                this.oldParent.insertBefore(this.videoContainer, this.oldParent.firstChild);\n                this.currentVideo = \"mobile\";\n            } else if (window.innerWidth > 768 && this.currentVideo !== \"desktop\") {\n                videoElement.src = this.desktopVideoSrc;\n                videoElement.type = \"video/mp4\";\n                this.videoContainer.classList.remove(\"bg-video--mobile\");\n                videoElement.classList.remove(\"bg-video--mobile__content_mobile\");\n                this.videoContainer.classList.add(\"bg-video--desktop\");\n                videoElement.classList.add(\"bg-video--desktop__content_desk\");\n                this.newParent.insertBefore(this.videoContainer, this.newParent.firstChild);\n                this.currentVideo = \"desktop\";\n            }\n            videoElement.onloadeddata = this.videoLoadSuccess.bind(this);\n            videoElement.onerror = this.videoLoadError.bind(this);\n        }\n        videoLoadSuccess() {\n            this.videoLoaded = true;\n            this.spinnerContainer.classList.add(\"hidden\");\n            this.videoContainer.style.display = \"block\";\n        }\n        videoLoadError() {\n            this.selectVideo();\n        }\n        throttleScroll() {\n            if (!this.scrolling) {\n                this.scrolling = true;\n                window.requestAnimationFrame(()=>{\n                    this.handleScroll();\n                    this.scrolling = false;\n                });\n            }\n        }\n        handleScroll() {\n            if (window.scrollY > this.scrollThreshold) {\n                this.navbar.classList.add(\"scrolled\");\n                this.navBtn.classList.replace(\"btn-light\", \"btn-dark\");\n            } else {\n                this.navbar.classList.remove(\"scrolled\");\n                this.navBtn.classList.replace(\"btn-dark\", \"btn-light\");\n            }\n        }\n        createIntersectionObserver() {\n            const observer = new IntersectionObserver(this.animateElement.bind(this), {\n                threshold: 0.1\n            });\n            const elementsToAnimate = document.querySelectorAll(\".target\");\n            elementsToAnimate.forEach((element)=>{\n                let delay = 0;\n                if (element.classList.contains(\"box1\")) delay = 0;\n                else if (element.classList.contains(\"box2\")) delay = 1000;\n                else if (element.classList.contains(\"box3\")) delay = 1000;\n                else if (element.classList.contains(\"box4\")) delay = 1000;\n                element.setAttribute(\"data-delay\", delay);\n                observer.observe(element);\n            });\n        }\n        animateElement(entries, observer) {\n            entries.forEach((entry)=>{\n                if (entry.isIntersecting) {\n                    const delay = parseInt(entry.target.getAttribute(\"data-delay\")) || 0;\n                    setTimeout(()=>{\n                        const animationClass = entry.target.getAttribute(\"data-class\");\n                        entry.target.classList.add(animationClass);\n                        observer.unobserve(entry.target);\n                        this.box2.classList.add(\"box2__fadeImg\");\n                    }, delay);\n                }\n            });\n        }\n        initOverlay() {\n            const checkbox = document.getElementById(\"navi-toggle\");\n            const overlay = document.createElement(\"div\");\n            overlay.classList.add(\"overlay\");\n            checkbox.addEventListener(\"change\", ()=>{\n                if (checkbox.checked) {\n                    document.body.appendChild(overlay);\n                    setTimeout(()=>overlay.classList.add(\"show\"), 10);\n                } else {\n                    overlay.classList.remove(\"show\");\n                    overlay.addEventListener(\"transitionend\", ()=>{\n                        if (!overlay.classList.contains(\"show\")) overlay.remove();\n                    }, {\n                        once: true\n                    });\n                }\n            });\n            overlay.addEventListener(\"click\", ()=>{\n                checkbox.checked = false;\n                overlay.classList.remove(\"show\");\n                overlay.addEventListener(\"transitionend\", ()=>{\n                    if (!overlay.classList.contains(\"show\")) overlay.remove();\n                }, {\n                    once: true\n                });\n            });\n        }\n        initIntroAnimation() {\n            const timeline = gsap.timeline();\n            timeline.to(\".header\", {\n                duration: 2.5,\n                x: 0,\n                opacity: 1,\n                ease: \"power2.out\"\n            }, \"-=0.4\").to(\".header__spans\", {\n                duration: 1,\n                x: 0,\n                opacity: 1,\n                ease: \"power2.out\"\n            }, \"-=0.4\").to(\".header__title\", {\n                duration: 1.1,\n                x: 0,\n                opacity: 1,\n                ease: \"power2.out\"\n            }, \"-=0.4\").to(\".header__buttons\", {\n                duration: 1.1,\n                x: 0,\n                opacity: 1,\n                ease: \"power2.out\"\n            }, \"-=0.4\").to(\".header__paragraph\", {\n                duration: 1.2,\n                x: 0,\n                opacity: 1,\n                ease: \"power2.out\"\n            }, \"-=0.4\");\n        }\n        initFeatureBoxVideo() {\n            const page2Trigger = document.querySelector(\".box1\");\n            this.featureBoxVideoContainer = document.getElementById(\"feature-box\");\n            const videoSource = this.featureBoxVideoContainer.querySelector(\"source\");\n            let isVideoLoaded = false;\n            this.isFirstTime = true;\n            const loadVideo = ()=>{\n                if (!videoSource.src) {\n                    videoSource.src = videoSource.dataset.src;\n                    this.featureBoxVideoContainer.load();\n                    isVideoLoaded = true;\n                }\n            };\n            const debounce = (func, delay)=>{\n                let inDebounce;\n                return function() {\n                    clearTimeout(inDebounce);\n                    inDebounce = setTimeout(()=>func.apply(this, arguments), delay);\n                };\n            };\n            const handleVideoPlayback = (entries)=>{\n                entries.forEach((entry)=>{\n                    if (entry.isIntersecting) {\n                        loadVideo();\n                        if (this.isFirstTime && !this.isMobileDevice()) {\n                            this.debouncePlayVideo();\n                            this.isFirstTime = false;\n                        } else if (this.isMobileDevice()) this.featureBoxVideoContainer.play();\n                    } else this.featureBoxVideoContainer.pause();\n                });\n            };\n            const observer = new IntersectionObserver(handleVideoPlayback, {\n                threshold: 0.5\n            });\n            observer.observe(page2Trigger);\n            if (!this.isMobileDevice()) {\n                page2Trigger.addEventListener(\"mouseover\", debounce(()=>{\n                    this.featureBoxVideoContainer.play();\n                }, 100));\n                page2Trigger.addEventListener(\"mouseleave\", debounce(()=>{\n                    this.featureBoxVideoContainer.pause();\n                }, 100));\n            } else {\n                this.featureBoxVideoContainer.loop = true;\n                observer.observe(this.featureBoxVideoContainer);\n            }\n        }\n        isMobileDevice() {\n            return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n        }\n        debouncePlayVideo() {\n            setTimeout(()=>{\n                this.featureBoxVideoContainer.play();\n                setTimeout(()=>{\n                    this.featureBoxVideoContainer.pause();\n                }, this.featureBoxVideoContainer.duration / 2 * 1000); // Pause at half the duration\n            }, 500);\n        }\n        debouncePauseVideo() {\n            setTimeout(()=>{\n                this.featureBoxVideoContainer.pause();\n            }, 500);\n        }\n    }\n    new PageHandler();\n});\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const solutionsItem = document.querySelector(\".Solutions\");\n    const dropdownMenu = solutionsItem.querySelector(\".dropdown-menu\");\n    const overlay = document.getElementById(\"overlay\");\n    const solutionslink = document.querySelector(\".Solutions-link\");\n    const solutionslinkarrow = document.querySelector(\".Solutions-arrow\");\n    const navigation = document.querySelector(\".navigation\");\n    const dropdownItem = document.querySelectorAll(\".dropdown--item\");\n    solutionsItem.addEventListener(\"mouseenter\", ()=>{\n        overlay.style.opacity = \"1\";\n        overlay.style.visibility = \"visible\";\n        solutionslink.style.color = \"#fff\";\n        solutionslinkarrow.style.fill = \"#fff\";\n    // on hold for add a overlay for the navigation\n    // navigation.classList.add('onhoveronsolutions')\n    });\n    solutionsItem.addEventListener(\"mouseleave\", ()=>{\n        overlay.style.opacity = \"0\";\n        overlay.style.visibility = \"hidden\";\n        solutionslink.style.color = \"inherit\";\n        solutionslinkarrow.style.fill = \"#000\";\n    // on hold for add a overlay for the navigation\n    // navigation.classList.remove('onhoveronsolutions')\n    });\n    dropdownItem.forEach((el)=>{\n        el.addEventListener(\"mouseenter\", ()=>{\n            dropdownMenu.classList.add(\"wide-dropdownMenu\");\n        });\n    });\n    dropdownMenu.addEventListener(\"mouseleave\", ()=>{\n        dropdownMenu.classList.remove(\"wide-dropdownMenu\");\n    });\n});\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    // Initialize ScrollMagic Controller\n    const controller = new ScrollMagic.Controller();\n    // GSAP animation for fading in and scaling up\n    const fadeInAnimation = gsap.fromTo(\"#work-process\", {\n        opacity: 0,\n        y: 50\n    }, {\n        duration: 0.5,\n        scale: 1,\n        opacity: 1,\n        y: 0,\n        ease: \"sine.out\"\n    });\n    // GSAP animation for fading out and moving up\n    const fadeOutAnimation = gsap.to(\"#work-process\", {\n        duration: 0.2,\n        opacity: 0,\n        y: -50,\n        ease: \"sine.out\"\n    });\n    // Create ScrollMagic Scene for fading in\n    new ScrollMagic.Scene({\n        triggerElement: \"#work-process\",\n        triggerHook: 0.11 // Trigger when 25% of the element is visible\n    }).setTween(fadeInAnimation).addTo(controller);\n    // Create ScrollMagic Scene for fading out\n    new ScrollMagic.Scene({\n        triggerElement: \"#work-process\",\n        triggerHook: 0.50,\n        offset: document.querySelector(\"#work-process\").offsetHeight // Offset to ensure the trigger happens at the bottom of the element\n    }).setTween(fadeOutAnimation).addTo(controller);\n    // Intersection Observer for background and text color changes\n    const sections = document.querySelectorAll(\".st1, .st2, .st3, .st4, .work-process__title_con\");\n    const workProcess = document.getElementById(\"work-process\");\n    const workProcessBackground = document.querySelector(\".work-process__background\");\n    const observer = new IntersectionObserver((entries, observer)=>{\n        entries.forEach((entry)=>{\n            if (entry.isIntersecting) {\n                if (entry.target.classList.contains(\"work-process__title_con\")) workProcess.style.backgroundColor = \"#F7F7F7\"; // Use solid color\n                else if (entry.target.classList.contains(\"st1\")) {\n                    workProcess.style.backgroundColor = \"#000\"; // Use solid color\n                    workProcess.style.color = \"#E2E5E4\";\n                } else if (entry.target.classList.contains(\"st2\")) {\n                    workProcess.style.backgroundColor = \"#183D3D\"; // Use solid color\n                    workProcess.style.color = \"#E2E5E4\";\n                    workProcessBackground.style.opacity = \"0\";\n                    workProcessBackground.style.display = \"none\";\n                } else if (entry.target.classList.contains(\"st3\")) {\n                    workProcess.style.backgroundColor = \"#ffffff\"; // Use solid color\n                    workProcess.style.color = \"#000\";\n                } else if (entry.target.classList.contains(\"st4\")) {\n                    workProcess.style.backgroundColor = \"#ffffff\"; // Use solid color\n                    workProcess.style.color = \"#000\";\n                    workProcessBackground.style.display = \"block\";\n                    setTimeout(()=>{\n                        workProcessBackground.style.opacity = \"1\";\n                    }, 100);\n                }\n                entry.target.style.opacity = \"1\";\n            } else // Reset animation when out of view\n            entry.target.style.opacity = \"0\";\n        });\n    }, {\n        root: null,\n        threshold: 0.3 // Adjust the threshold as needed\n    });\n    sections.forEach((section)=>{\n        observer.observe(section);\n    });\n    // Handle line color and height\n    const lines = document.querySelectorAll(\".line\");\n    const handleScroll = ()=>{\n        const windowHeight = window.innerHeight;\n        const lineHeight = 1584; // 70rem in pixels\n        const speedFactor = 0.5; // Adjust this value to slow down the line height growth\n        lines.forEach((line)=>{\n            const rect = line.getBoundingClientRect();\n            const startColor = line.dataset.colorStart;\n            const endColor = line.dataset.colorEnd;\n            if (rect.top <= windowHeight && rect.bottom >= 0) {\n                const visibleHeight = Math.min(windowHeight - rect.top, lineHeight);\n                const adjustedHeight = visibleHeight * speedFactor; // Adjust the visible height by the speed factor\n                const newHeight = adjustedHeight / lineHeight * lineHeight;\n                line.style.height = `${newHeight}px`;\n                const progress = visibleHeight / lineHeight;\n                line.style.backgroundColor = interpolateColor(startColor, endColor, progress);\n            } else {\n                line.style.height = \"0\";\n                line.style.backgroundColor = startColor;\n            }\n        });\n    };\n    const interpolateColor = (color1, color2, factor)=>{\n        const result = color1.slice(1).match(/.{2}/g).map((c, i)=>{\n            const value = Math.round(parseInt(c, 16) * (1 - factor) + parseInt(color2.slice(1).match(/.{2}/g)[i], 16) * factor);\n            return value.toString(16).padStart(2, \"0\");\n        }).join(\"\");\n        return `#${result}`;\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    window.addEventListener(\"resize\", handleScroll);\n    handleScroll(); // Initial check on page load\n    // Create animations for descriptions\n    function createAnimations(section) {\n        const leftPs = section.querySelectorAll(\".work-process__decription--left\");\n        const rightPs = section.querySelectorAll(\".work-process__decription--right\");\n        if (leftPs.length === 0 || rightPs.length === 0) {\n            console.warn(\"No left or right p elements found in the section.\");\n            return;\n        }\n        leftPs.forEach((leftP, index)=>{\n            const rightP = rightPs[index];\n            if (rightP) {\n                // Animation for left p element\n                const leftPAnimationIn = gsap.fromTo(leftP, {\n                    opacity: 0,\n                    x: -100\n                }, {\n                    opacity: 1,\n                    x: 0,\n                    duration: 0.5\n                });\n                const leftPAnimationOut = gsap.to(leftP, {\n                    opacity: 0,\n                    x: -100,\n                    duration: 0.5\n                });\n                // Animation for right p element\n                const rightPAnimationIn = gsap.fromTo(rightP, {\n                    opacity: 0,\n                    x: 100\n                }, {\n                    opacity: 1,\n                    x: 0,\n                    duration: 0.5\n                });\n                const rightPAnimationOut = gsap.to(rightP, {\n                    opacity: 0,\n                    x: 100,\n                    duration: 0.5\n                });\n                // Create ScrollMagic Scene for left p element\n                new ScrollMagic.Scene({\n                    triggerElement: section,\n                    triggerHook: 0.5,\n                    duration: section.offsetHeight\n                }).setTween(leftPAnimationIn).on(\"enter\", ()=>{\n                    rightPAnimationOut.play();\n                }).on(\"leave\", ()=>{\n                    leftPAnimationOut.play();\n                }).addTo(controller);\n                // Create ScrollMagic Scene for right p element\n                new ScrollMagic.Scene({\n                    triggerElement: section,\n                    triggerHook: 0.5,\n                    duration: section.offsetHeight\n                }).setTween(rightPAnimationIn).on(\"enter\", ()=>{\n                    leftPAnimationOut.play();\n                }).on(\"leave\", ()=>{\n                    rightPAnimationOut.play();\n                }).addTo(controller);\n            }\n        });\n    }\n    // Apply animations to each section\n    const sectionsToAnimate = document.querySelectorAll(\".st1, .st2, .st3, .st4\");\n    sectionsToAnimate.forEach(createAnimations);\n});\n///////////////\n/////////////\n// JavaScript Code\nconst $ae0af43c09de0737$var$form = document.getElementById(\"multiStepForm\");\nconst $ae0af43c09de0737$var$nextButton = $ae0af43c09de0737$var$form.querySelector(\".next\");\nconst $ae0af43c09de0737$var$backButton = $ae0af43c09de0737$var$form.querySelector(\".back\");\nconst $ae0af43c09de0737$var$progressBarSteps = document.querySelectorAll(\".progress-bar__step\");\nconst $ae0af43c09de0737$var$formSteps = document.querySelectorAll(\".form-step\");\nlet $ae0af43c09de0737$var$currentStep = 0;\nconst $ae0af43c09de0737$var$showStep = (step)=>{\n    $ae0af43c09de0737$var$formSteps.forEach((formStep, index)=>{\n        formStep.classList.remove(\"form-step--active\");\n        if (index === step) formStep.classList.add(\"form-step--active\");\n        if ($ae0af43c09de0737$var$currentStep < 1) $ae0af43c09de0737$var$backButton.style.display = \"none\";\n        else if ($ae0af43c09de0737$var$currentStep >= 1) $ae0af43c09de0737$var$backButton.style.display = \"flex\";\n    });\n    $ae0af43c09de0737$var$progressBarSteps.forEach((progressStep, index)=>{\n        progressStep.classList.remove(\"progress-bar__step--active\");\n        if (index <= step) progressStep.classList.add(\"progress-bar__step--active\");\n    });\n};\nconst $ae0af43c09de0737$var$validateStep = (step)=>{\n    const inputs = $ae0af43c09de0737$var$formSteps[step].querySelectorAll(\"input[required]\");\n    let valid = true;\n    inputs.forEach((input)=>{\n        if (!input.value) {\n            input.classList.add(\"error\");\n            valid = false;\n        } else input.classList.remove(\"error\");\n    });\n    return valid;\n};\nconst $ae0af43c09de0737$var$animateStepTransition = (direction)=>{\n    gsap.to($ae0af43c09de0737$var$formSteps[$ae0af43c09de0737$var$currentStep], {\n        duration: 0.5,\n        x: direction === \"next\" ? \"-100%\" : \"100%\",\n        opacity: 0,\n        onComplete: ()=>{\n            $ae0af43c09de0737$var$currentStep += direction === \"next\" ? 1 : -1;\n            $ae0af43c09de0737$var$showStep($ae0af43c09de0737$var$currentStep);\n            gsap.fromTo($ae0af43c09de0737$var$formSteps[$ae0af43c09de0737$var$currentStep], {\n                x: direction === \"next\" ? \"100%\" : \"-100%\",\n                opacity: 0\n            }, {\n                duration: 0.5,\n                x: \"0%\",\n                opacity: 1\n            });\n        }\n    });\n};\n$ae0af43c09de0737$var$nextButton.addEventListener(\"click\", ()=>{\n    if ($ae0af43c09de0737$var$validateStep($ae0af43c09de0737$var$currentStep)) $ae0af43c09de0737$var$animateStepTransition(\"next\");\n    if ($ae0af43c09de0737$var$currentStep === 2) $ae0af43c09de0737$var$nextButton.textContent = \"Send\";\n});\n$ae0af43c09de0737$var$backButton.addEventListener(\"click\", ()=>{\n    $ae0af43c09de0737$var$animateStepTransition(\"back\");\n    if ($ae0af43c09de0737$var$currentStep <= 3) $ae0af43c09de0737$var$nextButton.textContent = \"Next\";\n});\n$ae0af43c09de0737$var$form.addEventListener(\"submit\", (event)=>{\n    event.preventDefault();\n    if ($ae0af43c09de0737$var$validateStep($ae0af43c09de0737$var$currentStep)) // Handle form submission\n    alert(\"Form submitted!\");\n});\n$ae0af43c09de0737$var$showStep($ae0af43c09de0737$var$currentStep);\n// scripts.js\n// scripts.js\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    // Initialize ScrollMagic Controller\n    const controller = new ScrollMagic.Controller();\n    // Create a scene to change the background color of the body\n    const bgColorScene = new ScrollMagic.Scene({\n        triggerElement: \".form-page\",\n        triggerHook: 0.5,\n        duration: \"100%\" // Maintain the background color change throughout the form-page\n    }).on(\"enter\", ()=>{\n        gsap.to(document.body, {\n            backgroundColor: \"#27343d\",\n            duration: 0.5\n        });\n    }).on(\"leave\", ()=>{\n        gsap.to(document.body, {\n            backgroundColor: \"#fff\",\n            duration: 0.5\n        });\n    }).addTo(controller);\n    // Create a scene to animate the form popping up\n    const formScene = new ScrollMagic.Scene({\n        triggerElement: \".form-page\",\n        triggerHook: 0.5\n    }).setTween(gsap.to(\".form-page-container\", {\n        opacity: 1,\n        scale: 1,\n        duration: 0.5\n    })).addTo(controller);\n});\n////////////////////////\n////////////////////////\n////////////////////////\n////////////////////////\n/////map////\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const location = [\n        51.505,\n        -0.09\n    ]; // Replace with your desired location [latitude, longitude]\n    const map = L.map(\"map\").setView(location, 13); // Adjust zoom level as needed\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n        maxZoom: 19 // Adjust max zoom level as needed\n    }).addTo(map);\n    const popupContent = '<a href=\"#\" onclick=\"window.open(`https://www.openstreetmap.org/?mlat=${location[0]}&mlon=${location[1]}&zoom=13`, `_blank`); return false;\">view on Map &#129106;</a>';\n    const marker = L.marker(location).addTo(map).bindPopup(popupContent, {\n        className: \"custom-popup\"\n    }).openPopup();\n    marker.on(\"click\", function() {\n        window.open(`https://www.openstreetmap.org/?mlat=${location[0]}&mlon=${location[1]}&zoom=13`, \"_blank\");\n    });\n    map.on(\"click\", function() {\n        window.open(`https://www.openstreetmap.org/?mlat=${location[0]}&mlon=${location[1]}&zoom=13`, \"_blank\");\n    });\n});\n\n\n//# sourceMappingURL=index.f47b5cc8.js.map\n","document.addEventListener(\"DOMContentLoaded\", function () {\r\n    class PageHandler {\r\n        constructor() {\r\n            this.loadingBar = document.getElementById('loading-bar');\r\n            this.spinnerContainer = document.getElementById('spinner-container');\r\n            this.videoContainer = document.getElementById('video-container');\r\n            this.backgroundVideo = document.getElementById('background-video');\r\n            this.navVideo = document.getElementById('navVideo');\r\n            this.navigationButton = document.querySelector('.navigation__button');\r\n            this.navbar = document.getElementById(\"navbar\");\r\n            this.navBtn = document.getElementById('btn-desk')\r\n            this.newParent = document.getElementById('header_container');\r\n            this.oldParent = document.getElementById('header');\r\n            this.box2 = document.querySelector('.box2');\r\n            this.scrollThreshold = 100;\r\n            this.mobileVideoSrc = 'mobile-Land-video.mp4';\r\n            this.desktopVideoSrc = 'video (2).mp4';\r\n            this.navVideoSrc = 'nav-cam.mp4';\r\n            this.currentVideo = '';\r\n            this.videoLoaded = false;\r\n            this.scrolling = false;\r\n            this.isFirstTime = true;\r\n\r\n            this.init();\r\n        }\r\n\r\n        init() {\r\n            this.startLoadingBar();\r\n            this.selectVideo();\r\n            this.navVideo.src = this.navVideoSrc;\r\n            this.navVideo.type = 'video/mp4';\r\n            window.addEventListener('resize', this.selectVideo.bind(this));\r\n            window.addEventListener('scroll', this.throttleScroll.bind(this));\r\n            this.createIntersectionObserver();\r\n            this.initOverlay();\r\n            this.initIntroAnimation();\r\n            this.initFeatureBoxVideo();\r\n        }\r\n\r\n        startLoadingBar() {\r\n            let interval = setInterval(() => {\r\n                const images = document.images;\r\n                let loadedImages = 0;\r\n                for (let i = 0; i < images.length; i++) {\r\n                    if (images[i].complete) {\r\n                        loadedImages++;\r\n                    }\r\n                }\r\n                let progress = Math.floor((loadedImages / images.length) * 100);\r\n                this.loadingBar.style.width = progress + '%';\r\n                this.loadingBar.style.backgroundColor = `rgb(${255 - (progress * 2.55)}, ${255 - (progress * 2.55)}, ${255 - (progress * 2.55)})`;\r\n\r\n                if (progress === 100) {\r\n                    clearInterval(interval);\r\n                    this.loadingBar.style.width = '100%';\r\n                    this.loadingBar.style.backgroundColor = 'black';\r\n                }\r\n            }, 100);\r\n        }\r\n\r\n        selectVideo() {\r\n            const videoElement = this.backgroundVideo;\r\n            videoElement.muted = true;\r\n            videoElement.playsinline = true;\r\n\r\n            if (window.innerWidth <= 768 && this.currentVideo !== 'mobile') {\r\n                videoElement.src = this.mobileVideoSrc;\r\n                videoElement.type = 'video/mp4';\r\n                this.videoContainer.classList.remove('bg-video--desktop');\r\n                videoElement.classList.remove('bg-video--desktop__content_desk');\r\n                this.videoContainer.classList.add('bg-video--mobile');\r\n                videoElement.classList.add('bg-video--mobile__content_mobile');\r\n                videoElement.loop = false;\r\n                this.oldParent.insertBefore(this.videoContainer, this.oldParent.firstChild);\r\n                this.currentVideo = 'mobile';\r\n            } else if (window.innerWidth > 768 && this.currentVideo !== 'desktop') {\r\n                videoElement.src = this.desktopVideoSrc;\r\n                videoElement.type = 'video/mp4';\r\n                this.videoContainer.classList.remove('bg-video--mobile');\r\n                videoElement.classList.remove('bg-video--mobile__content_mobile');\r\n                this.videoContainer.classList.add('bg-video--desktop');\r\n                videoElement.classList.add('bg-video--desktop__content_desk');\r\n                this.newParent.insertBefore(this.videoContainer, this.newParent.firstChild);\r\n                this.currentVideo = 'desktop';\r\n            }\r\n\r\n            videoElement.onloadeddata = this.videoLoadSuccess.bind(this);\r\n            videoElement.onerror = this.videoLoadError.bind(this);\r\n        }\r\n\r\n        videoLoadSuccess() {\r\n            this.videoLoaded = true;\r\n            this.spinnerContainer.classList.add('hidden');\r\n            this.videoContainer.style.display = 'block';\r\n        }\r\n\r\n        videoLoadError() {\r\n            this.selectVideo();\r\n        }\r\n\r\n        throttleScroll() {\r\n            if (!this.scrolling) {\r\n                this.scrolling = true;\r\n                window.requestAnimationFrame(() => {\r\n                    this.handleScroll();\r\n                    this.scrolling = false;\r\n                });\r\n            }\r\n        }\r\n\r\n        handleScroll() {\r\n            if (window.scrollY > this.scrollThreshold) {\r\n                this.navbar.classList.add(\"scrolled\");\r\n                this.navBtn.classList.replace(\"btn-light\",\"btn-dark\")\r\n              } else {\r\n                this.navbar.classList.remove(\"scrolled\");\r\n                this.navBtn.classList.replace(\"btn-dark\",\"btn-light\")\r\n            }\r\n        }\r\n\r\n        createIntersectionObserver() {\r\n            const observer = new IntersectionObserver(this.animateElement.bind(this), { threshold: 0.1 });\r\n            const elementsToAnimate = document.querySelectorAll('.target');\r\n\r\n            elementsToAnimate.forEach((element) => {\r\n                let delay = 0;\r\n                if (element.classList.contains('box1')) {\r\n                    delay = 0;\r\n                } else if (element.classList.contains('box2')) {\r\n                    delay = 1000; \r\n                } else if (element.classList.contains('box3')) {\r\n                    delay = 1000;\r\n                } else if (element.classList.contains('box4')) {\r\n                    delay = 1000; \r\n                }\r\n\r\n                element.setAttribute('data-delay', delay);\r\n                observer.observe(element);\r\n            });\r\n        }\r\n\r\n        animateElement(entries, observer) {\r\n            entries.forEach((entry) => {\r\n                if (entry.isIntersecting) {\r\n                    const delay = parseInt(entry.target.getAttribute('data-delay')) || 0;\r\n                    setTimeout(() => {\r\n                        const animationClass = entry.target.getAttribute('data-class');\r\n                        entry.target.classList.add(animationClass);\r\n                        observer.unobserve(entry.target);\r\n                        this.box2.classList.add('box2__fadeImg');\r\n                    }, delay);\r\n                }\r\n            });\r\n        }\r\n\r\n        initOverlay() {\r\n            const checkbox = document.getElementById('navi-toggle');\r\n            const overlay = document.createElement('div');\r\n            overlay.classList.add('overlay');\r\n\r\n            checkbox.addEventListener('change', () => {\r\n                if (checkbox.checked) {\r\n                    document.body.appendChild(overlay);\r\n                    setTimeout(() => overlay.classList.add('show'), 10);\r\n                } else {\r\n                    overlay.classList.remove('show');\r\n                    overlay.addEventListener('transitionend', () => {\r\n                        if (!overlay.classList.contains('show')) {\r\n                            overlay.remove();\r\n                        }\r\n                    }, { once: true });\r\n                }\r\n            });\r\n\r\n            overlay.addEventListener('click', () => {\r\n                checkbox.checked = false;\r\n                overlay.classList.remove('show');\r\n                overlay.addEventListener('transitionend', () => {\r\n                    if (!overlay.classList.contains('show')) {\r\n                        overlay.remove();\r\n                    }\r\n                }, { once: true });\r\n            });\r\n        }\r\n\r\n        initIntroAnimation() {\r\n            const timeline = gsap.timeline();\r\n            timeline.to(\".header\", { duration: 2.5, x: 0, opacity: 1, ease: \"power2.out\" }, \"-=0.4\")\r\n                .to(\".header__spans\", { duration: 1, x: 0, opacity: 1, ease: \"power2.out\" }, \"-=0.4\")\r\n                .to(\".header__title\", { duration: 1.1, x: 0, opacity: 1, ease: \"power2.out\" }, \"-=0.4\")\r\n                .to(\".header__buttons\", { duration: 1.1, x: 0, opacity: 1, ease: \"power2.out\" }, \"-=0.4\")\r\n                .to(\".header__paragraph\", { duration: 1.2, x: 0, opacity: 1, ease: \"power2.out\" }, \"-=0.4\");\r\n        }\r\n\r\n        initFeatureBoxVideo() {\r\n            const page2Trigger = document.querySelector('.box1');\r\n            this.featureBoxVideoContainer = document.getElementById('feature-box');\r\n            const videoSource = this.featureBoxVideoContainer.querySelector('source');\r\n            let isVideoLoaded = false;\r\n            this.isFirstTime = true;\r\n        \r\n            const loadVideo = () => {\r\n                if (!videoSource.src) {\r\n                    videoSource.src = videoSource.dataset.src;\r\n                    this.featureBoxVideoContainer.load();\r\n                    isVideoLoaded = true;\r\n                }\r\n            };\r\n        \r\n            const debounce = (func, delay) => {\r\n                let inDebounce;\r\n                return function () {\r\n                    clearTimeout(inDebounce);\r\n                    inDebounce = setTimeout(() => func.apply(this, arguments), delay);\r\n                };\r\n            };\r\n        \r\n            const handleVideoPlayback = (entries) => {\r\n                entries.forEach(entry => {\r\n                    if (entry.isIntersecting) {\r\n                        loadVideo();\r\n                        if (this.isFirstTime && !this.isMobileDevice()) {\r\n                            this.debouncePlayVideo();\r\n                            this.isFirstTime = false;\r\n                        } else if (this.isMobileDevice()) {\r\n                            this.featureBoxVideoContainer.play();\r\n                        }\r\n                    } else {\r\n                        this.featureBoxVideoContainer.pause();\r\n                    }\r\n                });\r\n            };\r\n        \r\n            const observer = new IntersectionObserver(handleVideoPlayback, { threshold: 0.5 });\r\n            observer.observe(page2Trigger);\r\n        \r\n            if (!this.isMobileDevice()) {\r\n                page2Trigger.addEventListener('mouseover', debounce(() => {\r\n                    this.featureBoxVideoContainer.play();\r\n                }, 100));\r\n                page2Trigger.addEventListener('mouseleave', debounce(() => {\r\n                    this.featureBoxVideoContainer.pause();\r\n                }, 100));\r\n            } else {\r\n                this.featureBoxVideoContainer.loop = true;\r\n                observer.observe(this.featureBoxVideoContainer);\r\n            }\r\n        }\r\n        \r\n        isMobileDevice() {\r\n            return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        }\r\n        \r\n        debouncePlayVideo() {\r\n            setTimeout(() => {\r\n                this.featureBoxVideoContainer.play();\r\n                setTimeout(() => {\r\n                    this.featureBoxVideoContainer.pause();\r\n                }, this.featureBoxVideoContainer.duration / 2 * 1000); // Pause at half the duration\r\n            }, 500);\r\n        }\r\n        \r\n        debouncePauseVideo() {\r\n            setTimeout(() => {\r\n                this.featureBoxVideoContainer.pause();\r\n            }, 500);\r\n        }\r\n        \r\n    }\r\n\r\n    new PageHandler();\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n document.addEventListener('DOMContentLoaded', () => {\r\n  const solutionsItem = document.querySelector('.Solutions');\r\n  const dropdownMenu = solutionsItem.querySelector('.dropdown-menu');\r\n  const overlay = document.getElementById('overlay');\r\n  const solutionslink = document.querySelector('.Solutions-link');\r\n  const solutionslinkarrow = document.querySelector('.Solutions-arrow');\r\n  const navigation = document.querySelector('.navigation');\r\n  const dropdownItem = document.querySelectorAll('.dropdown--item')\r\n\r\n    solutionsItem.addEventListener('mouseenter', () => {\r\n      overlay.style.opacity = '1';\r\n      overlay.style.visibility = 'visible';\r\n      solutionslink.style.color = \"#fff\"\r\n      solutionslinkarrow.style.fill = \"#fff\";\r\n      // on hold for add a overlay for the navigation\r\n      // navigation.classList.add('onhoveronsolutions')\r\n    });\r\n\r\n    solutionsItem.addEventListener('mouseleave', () => {\r\n      overlay.style.opacity = '0';\r\n      overlay.style.visibility = 'hidden';\r\n      solutionslink.style.color = \"inherit\"\r\n      solutionslinkarrow.style.fill = \"#000\";\r\n\r\n      // on hold for add a overlay for the navigation\r\n      // navigation.classList.remove('onhoveronsolutions')\r\n    });\r\n\r\n    dropdownItem.forEach(el => {\r\n      el.addEventListener('mouseenter', () => {\r\n        dropdownMenu.classList.add(\"wide-dropdownMenu\")\r\n      })\r\n    })\r\n\r\n    dropdownMenu.addEventListener('mouseleave', () => {\r\n      dropdownMenu.classList.remove(\"wide-dropdownMenu\")\r\n    })\r\n    \r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  // Initialize ScrollMagic Controller\r\n  const controller = new ScrollMagic.Controller();\r\n\r\n  // GSAP animation for fading in and scaling up\r\n  const fadeInAnimation = gsap.fromTo(\"#work-process\", {\r\n    opacity: 0,\r\n    y: 50\r\n  }, {\r\n    duration: 0.5,\r\n    scale: 1,\r\n    opacity: 1,\r\n    y: 0,\r\n    ease: \"sine.out\",\r\n  });\r\n\r\n  // GSAP animation for fading out and moving up\r\n  const fadeOutAnimation = gsap.to(\"#work-process\", {\r\n    duration: 0.2,\r\n    opacity: 0,\r\n    y: -50,\r\n    ease: \"sine.out\",\r\n  });\r\n\r\n  // Create ScrollMagic Scene for fading in\r\n  new ScrollMagic.Scene({\r\n    triggerElement: \"#work-process\",\r\n    triggerHook: 0.11 // Trigger when 25% of the element is visible\r\n  })\r\n  .setTween(fadeInAnimation)\r\n  .addTo(controller);\r\n\r\n  // Create ScrollMagic Scene for fading out\r\n  new ScrollMagic.Scene({\r\n    triggerElement: \"#work-process\",\r\n    triggerHook: 0.50, // Trigger when 75% of the element is visible (bottom trigger)\r\n    offset: document.querySelector(\"#work-process\").offsetHeight // Offset to ensure the trigger happens at the bottom of the element\r\n  })\r\n  .setTween(fadeOutAnimation)\r\n  .addTo(controller);\r\n\r\n  // Intersection Observer for background and text color changes\r\n  const sections = document.querySelectorAll('.st1, .st2, .st3, .st4, .work-process__title_con');\r\n  const workProcess = document.getElementById('work-process');\r\n  const workProcessBackground = document.querySelector('.work-process__background');\r\n\r\n  const observer = new IntersectionObserver((entries, observer) => {\r\n    entries.forEach(entry => {\r\n      if (entry.isIntersecting) {\r\n        if (entry.target.classList.contains('work-process__title_con')) {\r\n          workProcess.style.backgroundColor = '#F7F7F7'; // Use solid color\r\n        } else if (entry.target.classList.contains('st1')) {\r\n          workProcess.style.backgroundColor = '#000'; // Use solid color\r\n          workProcess.style.color = '#E2E5E4';\r\n        } else if (entry.target.classList.contains('st2')) {\r\n          workProcess.style.backgroundColor = '#183D3D'; // Use solid color\r\n          workProcess.style.color = '#E2E5E4';\r\n          workProcessBackground.style.opacity = \"0\";\r\n          workProcessBackground.style.display = \"none\";\r\n        } else if (entry.target.classList.contains('st3')) {\r\n          workProcess.style.backgroundColor = '#ffffff'; // Use solid color\r\n          workProcess.style.color = '#000';\r\n        } else if (entry.target.classList.contains('st4')) {\r\n          workProcess.style.backgroundColor = '#ffffff'; // Use solid color\r\n          workProcess.style.color = '#000';\r\n          workProcessBackground.style.display = \"block\";\r\n          setTimeout(() => {\r\n            workProcessBackground.style.opacity = \"1\";\r\n          }, 100);\r\n        }\r\n        entry.target.style.opacity = '1';\r\n      } else {\r\n        // Reset animation when out of view\r\n        entry.target.style.opacity = '0';\r\n      }\r\n    });\r\n  }, {\r\n    root: null,\r\n    threshold: 0.3 // Adjust the threshold as needed\r\n  });\r\n\r\n  sections.forEach(section => {\r\n    observer.observe(section);\r\n  });\r\n// Handle line color and height\r\nconst lines = document.querySelectorAll('.line');\r\n\r\nconst handleScroll = () => {\r\n  const windowHeight = window.innerHeight;\r\n  const lineHeight = 99 * 16; // 70rem in pixels\r\n  const speedFactor = 0.5; // Adjust this value to slow down the line height growth\r\n\r\n  lines.forEach(line => {\r\n    const rect = line.getBoundingClientRect();\r\n    const startColor = line.dataset.colorStart;\r\n    const endColor = line.dataset.colorEnd;\r\n\r\n    if (rect.top <= windowHeight && rect.bottom >= 0) {\r\n      const visibleHeight = Math.min(windowHeight - rect.top, lineHeight);\r\n      const adjustedHeight = visibleHeight * speedFactor; // Adjust the visible height by the speed factor\r\n      const newHeight = (adjustedHeight / lineHeight) * lineHeight;\r\n      line.style.height = `${newHeight}px`;\r\n\r\n      const progress = visibleHeight / lineHeight;\r\n      line.style.backgroundColor = interpolateColor(startColor, endColor, progress);\r\n    } else {\r\n      line.style.height = '0';\r\n      line.style.backgroundColor = startColor;\r\n    }\r\n  });\r\n};\r\n\r\nconst interpolateColor = (color1, color2, factor) => {\r\n  const result = color1.slice(1).match(/.{2}/g)\r\n    .map((c, i) => {\r\n      const value = Math.round(parseInt(c, 16) * (1 - factor) + parseInt(color2.slice(1).match(/.{2}/g)[i], 16) * factor);\r\n      return value.toString(16).padStart(2, '0');\r\n    })\r\n    .join('');\r\n  return `#${result}`;\r\n};\r\n\r\nwindow.addEventListener('scroll', handleScroll);\r\nwindow.addEventListener('resize', handleScroll);\r\nhandleScroll(); // Initial check on page load\r\n\r\n  // Create animations for descriptions\r\n  function createAnimations(section) {\r\n    const leftPs = section.querySelectorAll('.work-process__decription--left');\r\n    const rightPs = section.querySelectorAll('.work-process__decription--right');\r\n\r\n    if (leftPs.length === 0 || rightPs.length === 0) {\r\n      console.warn(\"No left or right p elements found in the section.\");\r\n      return;\r\n    }\r\n\r\n    leftPs.forEach((leftP, index) => {\r\n      const rightP = rightPs[index];\r\n\r\n      if (rightP) {\r\n        // Animation for left p element\r\n        const leftPAnimationIn = gsap.fromTo(leftP, { opacity: 0, x: -100 }, { opacity: 1, x: 0, duration: 0.5 });\r\n        const leftPAnimationOut = gsap.to(leftP, { opacity: 0, x: -100, duration: 0.5 });\r\n\r\n        // Animation for right p element\r\n        const rightPAnimationIn = gsap.fromTo(rightP, { opacity: 0, x: 100 }, { opacity: 1, x: 0, duration: 0.5 });\r\n        const rightPAnimationOut = gsap.to(rightP, { opacity: 0, x: 100, duration: 0.5 });\r\n\r\n        // Create ScrollMagic Scene for left p element\r\n        new ScrollMagic.Scene({\r\n          triggerElement: section,\r\n          triggerHook: 0.5,\r\n          duration: section.offsetHeight\r\n        })\r\n        .setTween(leftPAnimationIn)\r\n        .on('enter', () => {\r\n          rightPAnimationOut.play();\r\n        })\r\n        .on('leave', () => {\r\n          leftPAnimationOut.play();\r\n        })\r\n        .addTo(controller);\r\n\r\n        // Create ScrollMagic Scene for right p element\r\n        new ScrollMagic.Scene({\r\n          triggerElement: section,\r\n          triggerHook: 0.5,\r\n          duration: section.offsetHeight\r\n        })\r\n        .setTween(rightPAnimationIn)\r\n        .on('enter', () => {\r\n          leftPAnimationOut.play();\r\n        })\r\n        .on('leave', () => {\r\n          rightPAnimationOut.play();\r\n        })\r\n        .addTo(controller);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Apply animations to each section\r\n  const sectionsToAnimate = document.querySelectorAll('.st1, .st2, .st3, .st4');\r\n  sectionsToAnimate.forEach(createAnimations);\r\n});\r\n\r\n\r\n\r\n\r\n///////////////\r\n\r\n\r\n\r\n/////////////\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript Code\r\nconst form = document.getElementById('multiStepForm');\r\nconst nextButton = form.querySelector('.next');\r\nconst backButton = form.querySelector('.back');\r\nconst progressBarSteps = document.querySelectorAll('.progress-bar__step');\r\nconst formSteps = document.querySelectorAll('.form-step');\r\nlet currentStep = 0;\r\n\r\nconst showStep = (step) => {\r\n  formSteps.forEach((formStep, index) => {\r\n    formStep.classList.remove('form-step--active');\r\n    if (index === step) {\r\n      formStep.classList.add('form-step--active');\r\n    }\r\n    if (currentStep < 1) {\r\n        backButton.style.display = 'none'\r\n    } else if (currentStep >= 1) {\r\n        backButton.style.display = 'flex'\r\n    }\r\n  });\r\n\r\n  progressBarSteps.forEach((progressStep, index) => {\r\n    progressStep.classList.remove('progress-bar__step--active');\r\n    if (index <= step) {\r\n      progressStep.classList.add('progress-bar__step--active');\r\n    }\r\n  });\r\n};\r\n\r\nconst validateStep = (step) => {\r\n  const inputs = formSteps[step].querySelectorAll('input[required]');\r\n  let valid = true;\r\n  inputs.forEach(input => {\r\n    if (!input.value) {\r\n      input.classList.add('error');\r\n      valid = false;\r\n    } else {\r\n      input.classList.remove('error');\r\n    }\r\n  });\r\n  return valid;\r\n};\r\n\r\nconst animateStepTransition = (direction) => {\r\n  gsap.to(formSteps[currentStep], {\r\n    duration: 0.5,\r\n    x: direction === 'next' ? '-100%' : '100%',\r\n    opacity: 0,\r\n    onComplete: () => {\r\n      currentStep += direction === 'next' ? 1 : -1;\r\n      showStep(currentStep);\r\n      gsap.fromTo(formSteps[currentStep], {\r\n        x: direction === 'next' ? '100%' : '-100%',\r\n        opacity: 0\r\n      }, {\r\n        duration: 0.5,\r\n        x: '0%',\r\n        opacity: 1\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nnextButton.addEventListener('click', () => {\r\n  if (validateStep(currentStep)) {\r\n    animateStepTransition('next');\r\n  }\r\n  if (currentStep ===2) {\r\n    nextButton.textContent = 'Send'\r\n  }\r\n});\r\n\r\nbackButton.addEventListener('click', () => {\r\n  animateStepTransition('back');\r\n  if (currentStep <= 3) {\r\n    nextButton.textContent = 'Next'\r\n  }\r\n});\r\n\r\nform.addEventListener('submit', (event) => {\r\n  event.preventDefault();\r\n  if (validateStep(currentStep)) {\r\n    // Handle form submission\r\n    alert('Form submitted!');\r\n  }\r\n});\r\n\r\nshowStep(currentStep);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// scripts.js\r\n// scripts.js\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  // Initialize ScrollMagic Controller\r\n  const controller = new ScrollMagic.Controller();\r\n\r\n  // Create a scene to change the background color of the body\r\n  const bgColorScene = new ScrollMagic.Scene({\r\n    triggerElement: \".form-page\",\r\n    triggerHook: 0.5, // Trigger when the middle of the form-page enters the viewport\r\n    duration: \"100%\"  // Maintain the background color change throughout the form-page\r\n  })\r\n  .on(\"enter\", () => {\r\n    gsap.to(document.body, { backgroundColor: \"#27343d\", duration: 0.5 });\r\n  })\r\n  .on(\"leave\", () => {\r\n    gsap.to(document.body, { backgroundColor: \"#fff\", duration: 0.5 });\r\n  })\r\n  .addTo(controller);\r\n\r\n  // Create a scene to animate the form popping up\r\n  const formScene = new ScrollMagic.Scene({\r\n    triggerElement: \".form-page\",\r\n    triggerHook: 0.5\r\n  })\r\n  .setTween(gsap.to(\".form-page-container\", { opacity: 1, scale: 1, duration: 0.5 }))\r\n  .addTo(controller);\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ////////////////////////\r\n  ////////////////////////\r\n  ////////////////////////\r\n  ////////////////////////\r\n  /////map////\r\n\r\n  document.addEventListener('DOMContentLoaded', () => {\r\n    const location = [51.505, -0.09]; // Replace with your desired location [latitude, longitude]\r\n    const map = L.map('map').setView(location, 13); // Adjust zoom level as needed\r\n\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n      maxZoom: 19 // Adjust max zoom level as needed\r\n    }).addTo(map);\r\n\r\n    const popupContent = '<a href=\"#\" onclick=\"window.open(`https://www.openstreetmap.org/?mlat=${location[0]}&mlon=${location[1]}&zoom=13`, `_blank`); return false;\">view on Map &#129106;</a>';\r\n    const marker = L.marker(location).addTo(map)\r\n      .bindPopup(popupContent, { className: 'custom-popup' })\r\n      .openPopup();\r\n\r\n    marker.on('click', function() {\r\n      window.open(`https://www.openstreetmap.org/?mlat=${location[0]}&mlon=${location[1]}&zoom=13`, '_blank');\r\n    });\r\n\r\n    map.on('click', function() {\r\n      window.open(`https://www.openstreetmap.org/?mlat=${location[0]}&mlon=${location[1]}&zoom=13`, '_blank');\r\n    });\r\n  });"],"names":["document","addEventListener","constructor","loadingBar","getElementById","spinnerContainer","videoContainer","backgroundVideo","navVideo","navigationButton","querySelector","navbar","navBtn","newParent","oldParent","box2","scrollThreshold","mobileVideoSrc","desktopVideoSrc","navVideoSrc","currentVideo","videoLoaded","scrolling","isFirstTime","init","startLoadingBar","selectVideo","src","type","window","bind","throttleScroll","createIntersectionObserver","initOverlay","initIntroAnimation","initFeatureBoxVideo","interval","setInterval","images","loadedImages","i","length","complete","progress","Math","floor","style","width","backgroundColor","clearInterval","videoElement","muted","playsinline","innerWidth","classList","remove","add","loop","insertBefore","firstChild","onloadeddata","videoLoadSuccess","onerror","videoLoadError","display","requestAnimationFrame","handleScroll","scrollY","replace","observer","IntersectionObserver","animateElement","threshold","elementsToAnimate","querySelectorAll","forEach","element","delay","contains","setAttribute","observe","entries","entry","isIntersecting","setTimeout","animationClass","target","getAttribute","unobserve","parseInt","checkbox","overlay","createElement","checked","body","appendChild","once","timeline","gsap","to","duration","x","opacity","ease","page2Trigger","featureBoxVideoContainer","videoSource","loadVideo","dataset","load","debounce","func","inDebounce","clearTimeout","apply","arguments","isMobileDevice","debouncePlayVideo","play","pause","test","navigator","userAgent","debouncePauseVideo","solutionsItem","dropdownMenu","solutionslink","solutionslinkarrow","dropdownItem","visibility","color","fill","el","controller","ScrollMagic","Controller","fadeInAnimation","fromTo","y","scale","fadeOutAnimation","Scene","triggerElement","triggerHook","setTween","addTo","offset","offsetHeight","sections","workProcess","workProcessBackground","root","section","lines","windowHeight","innerHeight","line","rect","getBoundingClientRect","startColor","colorStart","endColor","colorEnd","top","bottom","visibleHeight","min","height","adjustedHeight","interpolateColor","color1","color2","factor","result","slice","match","map","c","value","round","toString","padStart","join","sectionsToAnimate","leftPs","rightPs","console","warn","leftP","index","rightP","leftPAnimationIn","leftPAnimationOut","rightPAnimationIn","rightPAnimationOut","on","$ae0af43c09de0737$var$form","$ae0af43c09de0737$var$nextButton","$ae0af43c09de0737$var$backButton","$ae0af43c09de0737$var$progressBarSteps","$ae0af43c09de0737$var$formSteps","$ae0af43c09de0737$var$currentStep","$ae0af43c09de0737$var$showStep","step","formStep","progressStep","$ae0af43c09de0737$var$validateStep","inputs","valid","input","$ae0af43c09de0737$var$animateStepTransition","direction","onComplete","textContent","event","preventDefault","alert","location","L","setView","tileLayer","attribution","maxZoom","marker","bindPopup","className","openPopup","open"],"version":3,"file":"index.f47b5cc8.js.map"}